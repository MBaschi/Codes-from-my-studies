;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/06/2021 17:05:39
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EFF4  	GOTO        1000
_interrupt:
;c.c,158 :: 		void interrupt(){
;c.c,159 :: 		if (INTCON.TMR0IF){
0x0008	0xA4F2      	BTFSS       INTCON, 2 
0x000A	0xD007      	BRA         L_interrupt23
;c.c,161 :: 		INTCON.TMR0IE=0;
0x000C	0x9AF2      	BCF         INTCON, 5 
;c.c,162 :: 		counter+=5; //ms
0x000E	0x0E05      	MOVLW       5
0x0010	0x261E      	ADDWF       _counter, 1 
0x0012	0x0E00      	MOVLW       0
0x0014	0x221F      	ADDWFC      _counter+1, 1 
;c.c,164 :: 		INTCON.TMR0IE=1;
0x0016	0x8AF2      	BSF         INTCON, 5 
;c.c,165 :: 		INTCON.TMR0IF=0;
0x0018	0x94F2      	BCF         INTCON, 2 
;c.c,166 :: 		}
L_interrupt23:
;c.c,168 :: 		if (PIR1.ADIF){
0x001A	0xAC9E      	BTFSS       PIR1, 6 
0x001C	0xD006      	BRA         L_interrupt24
;c.c,169 :: 		PIR1.ADIE=0;
0x001E	0x9C9E      	BCF         PIR1, 6 
;c.c,170 :: 		new_val_adc=1;
0x0020	0x0E01      	MOVLW       1
0x0022	0x6E15      	MOVWF       _new_val_adc 
;c.c,171 :: 		ADCON0.GO_NOT_DONE=1;
0x0024	0x82C2      	BSF         ADCON0, 1 
;c.c,172 :: 		PIR1.ADIF=1;
0x0026	0x8C9E      	BSF         PIR1, 6 
;c.c,173 :: 		PIR1.ADIE=0;
0x0028	0x9C9E      	BCF         PIR1, 6 
;c.c,174 :: 		}
L_interrupt24:
;c.c,175 :: 		}
L_end_interrupt:
L__interrupt38:
0x002A	0x0011      	RETFIE      1
; end of _interrupt
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x002C	0x0E0F      	MOVLW       15
0x002E	0x6E0C      	MOVWF       R12, 0
0x0030	0x0E47      	MOVLW       71
0x0032	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x0034	0x2E0D      	DECFSZ      R13, 1, 0
0x0036	0xD7FE      	BRA         L_Delay_5500us5
0x0038	0x2E0C      	DECFSZ      R12, 1, 0
0x003A	0xD7FC      	BRA         L_Delay_5500us5
0x003C	0x0000      	NOP
0x003E	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0040	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0042	0x0000      	NOP
0x0044	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0046	0x0012      	RETURN      0
; end of _Delay_1us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0048	0x0E21      	MOVLW       33
0x004A	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x004C	0x2E0D      	DECFSZ      R13, 1, 0
0x004E	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0050	0x0012      	RETURN      0
; end of _Delay_50us
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x0052	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x0054	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x0056	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x0058	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x005A	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x005C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x005E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x0060	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x0062	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x0064	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x0066	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x0068	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x006A	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x006C	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x006E	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x0070	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x0072	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x0074	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x0076	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0078	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x007A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x007C	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x007E	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0080	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x0082	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x0084	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x0086	0x0012      	RETURN      0
; end of _Div_16X16_U
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x0088	0xBE44      	BTFSC       FARG_Lcd_Cmd_out_char, 7 
0x008A	0xD002      	BRA         L__Lcd_Cmd21
0x008C	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x008E	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0090	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0092	0xBC44      	BTFSC       FARG_Lcd_Cmd_out_char, 6 
0x0094	0xD002      	BRA         L__Lcd_Cmd23
0x0096	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0098	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x009A	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x009C	0xBA44      	BTFSC       FARG_Lcd_Cmd_out_char, 5 
0x009E	0xD002      	BRA         L__Lcd_Cmd25
0x00A0	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00A2	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x00A4	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x00A6	0xB844      	BTFSC       FARG_Lcd_Cmd_out_char, 4 
0x00A8	0xD002      	BRA         L__Lcd_Cmd27
0x00AA	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00AC	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x00AE	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x00B0	0xB020      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00B2	0xD002      	BRA         L__Lcd_Cmd29
0x00B4	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00B6	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x00B8	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x00BA	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x00BC	0xDFC2      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x00BE	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x00C0	0xB644      	BTFSC       FARG_Lcd_Cmd_out_char, 3 
0x00C2	0xD002      	BRA         L__Lcd_Cmd31
0x00C4	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x00C6	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x00C8	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x00CA	0xB444      	BTFSC       FARG_Lcd_Cmd_out_char, 2 
0x00CC	0xD002      	BRA         L__Lcd_Cmd33
0x00CE	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00D0	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x00D2	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x00D4	0xB244      	BTFSC       FARG_Lcd_Cmd_out_char, 1 
0x00D6	0xD002      	BRA         L__Lcd_Cmd35
0x00D8	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00DA	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00DC	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00DE	0xB044      	BTFSC       FARG_Lcd_Cmd_out_char, 0 
0x00E0	0xD002      	BRA         L__Lcd_Cmd37
0x00E2	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00E4	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00E6	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00E8	0xB020      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00EA	0xD002      	BRA         L__Lcd_Cmd39
0x00EC	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00EE	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00F0	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00F2	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00F4	0xDFA6      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00F6	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00F8	0xA020      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00FA	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00FC	0xDF97      	RCALL       _Delay_5500us
0x00FE	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0100	0xDFA3      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0102	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0104	0x9020      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x0106	0xF044C03D  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x010A	0xDFBE      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x010C	0x8020      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x010E	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x0110	0x6A41      	CLRF        WordToStr_len_L0 
L_WordToStr11:
0x0112	0x0E05      	MOVLW       5
0x0114	0x5C41      	SUBWF       WordToStr_len_L0, 0 
0x0116	0xE20A      	BC          L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x0118	0x5041      	MOVF        WordToStr_len_L0, 0 
0x011A	0x243F      	ADDWF       FARG_WordToStr_output, 0 
0x011C	0x6EE1      	MOVWF       FSR1L 
0x011E	0x0E00      	MOVLW       0
0x0120	0x2040      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0122	0x6EE2      	MOVWF       FSR1L+1 
0x0124	0x0E20      	MOVLW       32
0x0126	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,103 :: 		
0x0128	0x2A41      	INCF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,104 :: 		
0x012A	0xD7F3      	BRA         L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x012C	0x5041      	MOVF        WordToStr_len_L0, 0 
0x012E	0x243F      	ADDWF       FARG_WordToStr_output, 0 
0x0130	0x6EE1      	MOVWF       FSR1L 
0x0132	0x0E00      	MOVLW       0
0x0134	0x2040      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0136	0x6EE2      	MOVWF       FSR1L+1 
0x0138	0x6AE6      	CLRF        POSTINC1 
0x013A	0x0641      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x013C	0x5041      	MOVF        WordToStr_len_L0, 0 
0x013E	0x243F      	ADDWF       FARG_WordToStr_output, 0 
0x0140	0x6E42      	MOVWF       FLOC__WordToStr 
0x0142	0x0E00      	MOVLW       0
0x0144	0x2040      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0146	0x6E43      	MOVWF       FLOC__WordToStr+1 
0x0148	0x0E0A      	MOVLW       10
0x014A	0x6E04      	MOVWF       R4 
0x014C	0x0E00      	MOVLW       0
0x014E	0x6E05      	MOVWF       R5 
0x0150	0xF000C03D  	MOVFF       FARG_WordToStr_input, R0
0x0154	0xF001C03E  	MOVFF       FARG_WordToStr_input+1, R1
0x0158	0xDF7C      	RCALL       _Div_16X16_U
0x015A	0xF000C008  	MOVFF       R8, R0
0x015E	0xF001C009  	MOVFF       R9, R1
0x0162	0x0E30      	MOVLW       48
0x0164	0x2600      	ADDWF       R0, 1 
0x0166	0xFFE1C042  	MOVFF       FLOC__WordToStr, FSR1L
0x016A	0xFFE2C043  	MOVFF       FLOC__WordToStr+1, FSR1H
0x016E	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,109 :: 		
0x0172	0x0E0A      	MOVLW       10
0x0174	0x6E04      	MOVWF       R4 
0x0176	0x0E00      	MOVLW       0
0x0178	0x6E05      	MOVWF       R5 
0x017A	0xF000C03D  	MOVFF       FARG_WordToStr_input, R0
0x017E	0xF001C03E  	MOVFF       FARG_WordToStr_input+1, R1
0x0182	0xDF67      	RCALL       _Div_16X16_U
0x0184	0xF03DC000  	MOVFF       R0, FARG_WordToStr_input
0x0188	0xF03EC001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x018C	0x0E00      	MOVLW       0
0x018E	0x1801      	XORWF       R1, 0 
0x0190	0xE102      	BNZ         L__WordToStr379
0x0192	0x0E00      	MOVLW       0
0x0194	0x1800      	XORWF       R0, 0 
L__WordToStr379:
0x0196	0xE101      	BNZ         L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0198	0xD002      	BRA         L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x019A	0x0641      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,113 :: 		
0x019C	0xD7CF      	BRA         L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x019E	0x0012      	RETURN      0
; end of _WordToStr
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x01A0	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x01A2	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x01A6	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x01A8	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x01AA	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x01AC	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x01AE	0x0012      	RETURN      0
; end of ___CC2DW
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x01B0	0x9A93      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x01B2	0x9893      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x01B4	0x9093      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x01B6	0x9293      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x01B8	0x9493      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x01BA	0x9693      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x01BC	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x01BE	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x01C0	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x01C2	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x01C4	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x01C6	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x01C8	0xDF31      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x01CA	0xDF30      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x01CC	0xDF2F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x01CE	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x01D0	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x01D2	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x01D4	0xDF36      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x01D6	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x01D8	0xDF29      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x01DA	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x01DC	0xDF32      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x01DE	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x01E0	0xDF25      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x01E2	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x01E4	0xDF2E      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x01E6	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x01E8	0xDF21      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x01EA	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x01EC	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x01EE	0xDF29      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x01F0	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x01F2	0xDF1C      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x01F4	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x01F6	0xDF25      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x01F8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x01FA	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x01FC	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x01FE	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0200	0xDF20      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0202	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x0204	0xDF13      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0206	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x0208	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x020A	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x020C	0xDF1A      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x020E	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0210	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0212	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0214	0xDF16      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0216	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0218	0xDF09      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x021A	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x021C	0xDF12      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x021E	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0220	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0222	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0224	0xDF0E      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0226	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0228	0xDF01      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x022A	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x022C	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x022E	0xDF09      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0230	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x0232	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x0234	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x0236	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x0238	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x023A	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x023C	0xDF02      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x023E	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x0240	0xDEF5      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x0242	0x8020      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0244	0x0012      	RETURN      0
; end of _Lcd_Init
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x0246	0x6A39      	CLRF        IntToStr_negative_L0 
0x0248	0x6A3A      	CLRF        IntToStr_negative_L0+1 
;__Lib_Conversions.c,202 :: 		
0x024A	0xF03BC033  	MOVFF       FARG_IntToStr_input, IntToStr_inword_L0
0x024E	0xF03CC034  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x0252	0x0E80      	MOVLW       128
0x0254	0x1834      	XORWF       FARG_IntToStr_input+1, 0 
0x0256	0x6E00      	MOVWF       R0 
0x0258	0x0E80      	MOVLW       128
0x025A	0x5C00      	SUBWF       R0, 0 
0x025C	0xE102      	BNZ         L__IntToStr387
0x025E	0x0E00      	MOVLW       0
0x0260	0x5C33      	SUBWF       FARG_IntToStr_input, 0 
L__IntToStr387:
0x0262	0xE20B      	BC          L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x0264	0x0E01      	MOVLW       1
0x0266	0x6E39      	MOVWF       IntToStr_negative_L0 
0x0268	0x0E00      	MOVLW       0
0x026A	0x6E3A      	MOVWF       IntToStr_negative_L0+1 
;__Lib_Conversions.c,205 :: 		
0x026C	0x5033      	MOVF        FARG_IntToStr_input, 0 
0x026E	0x0800      	SUBLW       0
0x0270	0x6E3B      	MOVWF       IntToStr_inword_L0 
0x0272	0xF03CC034  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
0x0276	0x0E00      	MOVLW       0
0x0278	0x563C      	SUBFWB      IntToStr_inword_L0+1, 1 
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x027A	0xF03DC03B  	MOVFF       IntToStr_inword_L0, FARG_WordToStr_input
0x027E	0xF03EC03C  	MOVFF       IntToStr_inword_L0+1, FARG_WordToStr_input+1
0x0282	0xF03FC035  	MOVFF       FARG_IntToStr_output, FARG_WordToStr_output
0x0286	0xF040C036  	MOVFF       FARG_IntToStr_output+1, FARG_WordToStr_output+1
0x028A	0xDF42      	RCALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x028C	0x0E06      	MOVLW       6
0x028E	0x6E37      	MOVWF       IntToStr_i_L0 
0x0290	0x0E00      	MOVLW       0
0x0292	0x6E38      	MOVWF       IntToStr_i_L0+1 
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x0294	0x0E00      	MOVLW       0
0x0296	0x6E00      	MOVWF       R0 
0x0298	0x5038      	MOVF        IntToStr_i_L0+1, 0 
0x029A	0x5C00      	SUBWF       R0, 0 
0x029C	0xE102      	BNZ         L__IntToStr388
0x029E	0x5037      	MOVF        IntToStr_i_L0, 0 
0x02A0	0x0800      	SUBLW       0
L__IntToStr388:
0x02A2	0xE219      	BC          L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x02A4	0x5037      	MOVF        IntToStr_i_L0, 0 
0x02A6	0x2435      	ADDWF       FARG_IntToStr_output, 0 
0x02A8	0x6EE1      	MOVWF       FSR1L 
0x02AA	0x5038      	MOVF        IntToStr_i_L0+1, 0 
0x02AC	0x2036      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02AE	0x6EE2      	MOVWF       FSR1L+1 
0x02B0	0x0E01      	MOVLW       1
0x02B2	0x5C37      	SUBWF       IntToStr_i_L0, 0 
0x02B4	0x6E00      	MOVWF       R0 
0x02B6	0x0E00      	MOVLW       0
0x02B8	0x5838      	SUBWFB      IntToStr_i_L0+1, 0 
0x02BA	0x6E01      	MOVWF       R1 
0x02BC	0x5000      	MOVF        R0, 0 
0x02BE	0x2435      	ADDWF       FARG_IntToStr_output, 0 
0x02C0	0x6EE9      	MOVWF       FSR0L 
0x02C2	0x5001      	MOVF        R1, 0 
0x02C4	0x2036      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02C6	0x6EEA      	MOVWF       FSR0L+1 
0x02C8	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,212 :: 		
0x02CC	0x0E01      	MOVLW       1
0x02CE	0x5E37      	SUBWF       IntToStr_i_L0, 1 
0x02D0	0x0E00      	MOVLW       0
0x02D2	0x5A38      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,213 :: 		
0x02D4	0xD7DF      	BRA         L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x02D6	0xFFE1C035  	MOVFF       FARG_IntToStr_output, FSR1L
0x02DA	0xFFE2C036  	MOVFF       FARG_IntToStr_output+1, FSR1H
0x02DE	0x0E20      	MOVLW       32
0x02E0	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,215 :: 		
0x02E2	0x5039      	MOVF        IntToStr_negative_L0, 0 
0x02E4	0x103A      	IORWF       IntToStr_negative_L0+1, 0 
0x02E6	0xE01A      	BZ          L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x02E8	0x6A37      	CLRF        IntToStr_i_L0 
0x02EA	0x6A38      	CLRF        IntToStr_i_L0+1 
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x02EC	0x5037      	MOVF        IntToStr_i_L0, 0 
0x02EE	0x2435      	ADDWF       FARG_IntToStr_output, 0 
0x02F0	0x6EE9      	MOVWF       FSR0L 
0x02F2	0x5038      	MOVF        IntToStr_i_L0+1, 0 
0x02F4	0x2036      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02F6	0x6EEA      	MOVWF       FSR0L+1 
0x02F8	0x50EE      	MOVF        POSTINC0, 0 
0x02FA	0x0A20      	XORLW       32
0x02FC	0xE103      	BNZ         L_IntToStr42
0x02FE	0x4A37      	INFSNZ      IntToStr_i_L0, 1 
0x0300	0x2A38      	INCF        IntToStr_i_L0+1, 1 
0x0302	0xD7F4      	BRA         L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x0304	0x0E01      	MOVLW       1
0x0306	0x5E37      	SUBWF       IntToStr_i_L0, 1 
0x0308	0x0E00      	MOVLW       0
0x030A	0x5A38      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,219 :: 		
0x030C	0x5037      	MOVF        IntToStr_i_L0, 0 
0x030E	0x2435      	ADDWF       FARG_IntToStr_output, 0 
0x0310	0x6EE1      	MOVWF       FSR1L 
0x0312	0x5038      	MOVF        IntToStr_i_L0+1, 0 
0x0314	0x2036      	ADDWFC      FARG_IntToStr_output+1, 0 
0x0316	0x6EE2      	MOVWF       FSR1L+1 
0x0318	0x0E2D      	MOVLW       45
0x031A	0x6EE6      	MOVWF       POSTINC1 
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x031C	0x0012      	RETURN      0
; end of _IntToStr
_Mul_16X16_U:
;__Lib_Math.c,440 :: 		
;__Lib_Math.c,447 :: 		
0x031E	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,448 :: 		
0x0320	0x6A0A      	CLRF        R10, 0
;__Lib_Math.c,449 :: 		
0x0322	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,450 :: 		
0x0324	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,451 :: 		
0x0326	0x0204      	MULWF       R4, 0
;__Lib_Math.c,453 :: 		
0x0328	0xF009CFF4  	MOVFF       PRODH, R9
;__Lib_Math.c,454 :: 		
0x032C	0xF008CFF3  	MOVFF       PRODL, R8
;__Lib_Math.c,455 :: 		
0x0330	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,456 :: 		
0x0332	0x0205      	MULWF       R5, 0
;__Lib_Math.c,458 :: 		
0x0334	0xF00BCFF4  	MOVFF       PRODH, R11
;__Lib_Math.c,459 :: 		
0x0338	0xF00ACFF3  	MOVFF       PRODL, R10
;__Lib_Math.c,460 :: 		
0x033C	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,461 :: 		
0x033E	0x0205      	MULWF       R5, 0
;__Lib_Math.c,463 :: 		
0x0340	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,464 :: 		
0x0342	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,465 :: 		
0x0344	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,466 :: 		
0x0346	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,467 :: 		
0x0348	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,468 :: 		
0x034A	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,469 :: 		
0x034C	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,470 :: 		
0x034E	0x0204      	MULWF       R4, 0
;__Lib_Math.c,472 :: 		
0x0350	0x50F3      	MOVF        PRODL, 0, 0
;__Lib_Math.c,473 :: 		
0x0352	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,474 :: 		
0x0354	0x50F4      	MOVF        PRODH, 0, 0
;__Lib_Math.c,475 :: 		
0x0356	0x220A      	ADDWFC      R10, 1, 0
;__Lib_Math.c,476 :: 		
0x0358	0x6AE8      	CLRF        WREG, 0
;__Lib_Math.c,477 :: 		
0x035A	0x220B      	ADDWFC      R11, 1, 0
;__Lib_Math.c,479 :: 		
0x035C	0xF000C008  	MOVFF       R8, R0
;__Lib_Math.c,480 :: 		
0x0360	0xF001C009  	MOVFF       R9, R1
;__Lib_Math.c,481 :: 		
0x0364	0xF002C00A  	MOVFF       R10, R2
;__Lib_Math.c,482 :: 		
0x0368	0xF003C00B  	MOVFF       R11, R3
;__Lib_Math.c,485 :: 		
L_end_Mul_16X16_U:
0x036C	0x0012      	RETURN      0
; end of _Mul_16X16_U
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x036E	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x0370	0x0E80      	MOVLW       128
0x0372	0x6E33      	MOVWF       FARG_Lcd_Out_row 
0x0374	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x0376	0x0EC0      	MOVLW       192
0x0378	0x6E33      	MOVWF       FARG_Lcd_Out_row 
0x037A	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x037C	0x0E94      	MOVLW       148
0x037E	0x6E33      	MOVWF       FARG_Lcd_Out_row 
0x0380	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x0382	0x0ED4      	MOVLW       212
0x0384	0x6E33      	MOVWF       FARG_Lcd_Out_row 
0x0386	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0388	0x0E80      	MOVLW       128
0x038A	0x6E33      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x038C	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x038E	0x5033      	MOVF        FARG_Lcd_Out_row, 0 
0x0390	0x0A01      	XORLW       1
0x0392	0xE0EE      	BZ          L_Lcd_Out13
0x0394	0x5033      	MOVF        FARG_Lcd_Out_row, 0 
0x0396	0x0A02      	XORLW       2
0x0398	0xE0EE      	BZ          L_Lcd_Out14
0x039A	0x5033      	MOVF        FARG_Lcd_Out_row, 0 
0x039C	0x0A03      	XORLW       3
0x039E	0xE0EE      	BZ          L_Lcd_Out15
0x03A0	0x5033      	MOVF        FARG_Lcd_Out_row, 0 
0x03A2	0x0A04      	XORLW       4
0x03A4	0xE0EE      	BZ          L_Lcd_Out16
0x03A6	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x03A8	0x0434      	DECF        FARG_Lcd_Out_column, 0 
0x03AA	0x6E00      	MOVWF       R0 
0x03AC	0x5033      	MOVF        FARG_Lcd_Out_row, 0 
0x03AE	0x2600      	ADDWF       R0, 1 
0x03B0	0xF033C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x03B4	0xF044C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x03B8	0xDE67      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x03BA	0x9020      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x03BC	0x6A37      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x03BE	0x5037      	MOVF        Lcd_Out_i_L0, 0 
0x03C0	0x2435      	ADDWF       FARG_Lcd_Out_text, 0 
0x03C2	0x6EE9      	MOVWF       FSR0L 
0x03C4	0x0E00      	MOVLW       0
0x03C6	0x2036      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x03C8	0x6EEA      	MOVWF       FSR0L+1 
0x03CA	0x52EE      	MOVF        POSTINC0, 1 
0x03CC	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x03CE	0x5037      	MOVF        Lcd_Out_i_L0, 0 
0x03D0	0x2435      	ADDWF       FARG_Lcd_Out_text, 0 
0x03D2	0x6EE9      	MOVWF       FSR0L 
0x03D4	0x0E00      	MOVLW       0
0x03D6	0x2036      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x03D8	0x6EEA      	MOVWF       FSR0L+1 
0x03DA	0xF03DCFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x03DE	0xDE92      	RCALL       _Lcd_Chr_CP
0x03E0	0x2A37      	INCF        Lcd_Out_i_L0, 1 
0x03E2	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x03E4	0x8020      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x03E6	0x0012      	RETURN      0
; end of _Lcd_Out
_main:
0x03E8	0x6A15      	CLRF        _new_val_adc 
0x03EA	0x0E41      	MOVLW       65
0x03EC	0x6E16      	MOVWF       ?lstr1_c 
0x03EE	0x0E42      	MOVLW       66
0x03F0	0x6E17      	MOVWF       23 
0x03F2	0x0E4F      	MOVLW       79
0x03F4	0x6E18      	MOVWF       24 
0x03F6	0x0E52      	MOVLW       82
0x03F8	0x6E19      	MOVWF       25 
0x03FA	0x0E54      	MOVLW       84
0x03FC	0x6E1A      	MOVWF       26 
0x03FE	0x0E45      	MOVLW       69
0x0400	0x6E1B      	MOVWF       27 
0x0402	0x0E44      	MOVLW       68
0x0404	0x6E1C      	MOVWF       28 
0x0406	0x6A1D      	CLRF        29 
;c.c,20 :: 		void main() {
;c.c,23 :: 		unsigned short int timer_value=30;
0x0408	0x0E1E      	MOVLW       30
0x040A	0x6E30      	MOVWF       main_timer_value_L0 
0x040C	0x0E1E      	MOVLW       30
0x040E	0x6E31      	MOVWF       main_timer_init_value_L0 
0x0410	0x0E01      	MOVLW       1
0x0412	0x6E32      	MOVWF       main_go_L0 
;c.c,43 :: 		TRISD=0;
0x0414	0x6A95      	CLRF        TRISD 
;c.c,44 :: 		ANSELD=255;
0x0416	0x0EFF      	MOVLW       255
0x0418	0x010F      	MOVLB       15
0x041A	0x6F3B      	MOVWF       ANSELD, 1
;c.c,47 :: 		TRISE.RE2=0;
0x041C	0x9496      	BCF         TRISE, 2 
;c.c,48 :: 		ANSELE.RE2=1;
0x041E	0x853C      	BSF         ANSELE, 2, 1
;c.c,49 :: 		LATE.RE2=0;
0x0420	0x948D      	BCF         LATE, 2 
;c.c,51 :: 		TRISA=0b00001111;
0x0422	0x0E0F      	MOVLW       15
0x0424	0x6E92      	MOVWF       TRISA 
;c.c,52 :: 		ANSELA=0b11110000;
0x0426	0x0EF0      	MOVLW       240
0x0428	0x6F38      	MOVWF       ANSELA, 1
;c.c,54 :: 		Lcd_Init();
0x042A	0xDEC2      	RCALL       _Lcd_Init
;c.c,55 :: 		Lcd_cmd(_LCD_CLEAR);
0x042C	0x0E01      	MOVLW       1
0x042E	0x6E44      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0430	0xDE2B      	RCALL       _Lcd_Cmd
;c.c,56 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x0432	0x0E0C      	MOVLW       12
0x0434	0x6E44      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0436	0xDE28      	RCALL       _Lcd_Cmd
;c.c,58 :: 		ADCON0=00010001;
0x0438	0x0E01      	MOVLW       1
0x043A	0x6EC2      	MOVWF       ADCON0 
;c.c,59 :: 		ADCON2=10100001; //left justified, TAD=8*(8/fosc)=8us>7,45us ho cercato di avvicinarmi il più possibile al tempo minimo di conversione viste la necessità di essere particolarmente reattivi
0x043C	0x0E21      	MOVLW       33
0x043E	0x6EC0      	MOVWF       ADCON2 
;c.c,60 :: 		TRISA.RA5=1;
0x0440	0x8A92      	BSF         TRISA, 5 
;c.c,63 :: 		T0CON=0b11000111;
0x0442	0x0EC7      	MOVLW       199
0x0444	0x6ED5      	MOVWF       T0CON 
;c.c,64 :: 		TMR0L=217;
0x0446	0x0ED9      	MOVLW       217
0x0448	0x6ED6      	MOVWF       TMR0L 
;c.c,67 :: 		INTCON=0b11100000; //T_overflow=(4/fosc)*(256-TMR0L)*PSA, siccome è richiesta una precisione del 5%
0x044A	0x0EE0      	MOVLW       224
0x044C	0x6EF2      	MOVWF       INTCON 
;c.c,70 :: 		PIE1.ADIE=1;
0x044E	0x8C9D      	BSF         PIE1, 6 
;c.c,71 :: 		PIR1.ADIF=0;
0x0450	0x9C9E      	BCF         PIR1, 6 
;c.c,73 :: 		ADCON0.GO_NOT_DONE=1;
0x0452	0x82C2      	BSF         ADCON0, 1 
;c.c,75 :: 		while (PORTA.RA0==0){ // quando premo start non posso più cambiare il valore iniziale del cronometro
L_main0:
0x0454	0xB080      	BTFSC       PORTA, 0 
0x0456	0xD02F      	BRA         L_main1
;c.c,77 :: 		RA2_NEW=PORTA.RA2;
0x0458	0x0E00      	MOVLW       0
0x045A	0xB480      	BTFSC       PORTA, 2 
0x045C	0x0E01      	MOVLW       1
0x045E	0x6E2C      	MOVWF       main_RA2_NEW_L0 
;c.c,78 :: 		RA3_NEW=PORTA.RA3;
0x0460	0x0E00      	MOVLW       0
0x0462	0xB680      	BTFSC       PORTA, 3 
0x0464	0x0E01      	MOVLW       1
0x0466	0x6E2E      	MOVWF       main_RA3_NEW_L0 
;c.c,80 :: 		if (RA2_NEW && RA2_NEW!=RA2_OLD){
0x0468	0x522C      	MOVF        main_RA2_NEW_L0, 1 
0x046A	0xE005      	BZ          L_main4
0x046C	0x502C      	MOVF        main_RA2_NEW_L0, 0 
0x046E	0x182D      	XORWF       main_RA2_OLD_L0, 0 
0x0470	0xE002      	BZ          L_main4
L__main30:
;c.c,81 :: 		timer_init_value+=5;
0x0472	0x0E05      	MOVLW       5
0x0474	0x2631      	ADDWF       main_timer_init_value_L0, 1 
;c.c,82 :: 		}
L_main4:
;c.c,84 :: 		if (RA3_NEW && RA3_NEW!=RA3_OLD){
0x0476	0x522E      	MOVF        main_RA3_NEW_L0, 1 
0x0478	0xE005      	BZ          L_main7
0x047A	0x502E      	MOVF        main_RA3_NEW_L0, 0 
0x047C	0x182F      	XORWF       main_RA3_OLD_L0, 0 
0x047E	0xE002      	BZ          L_main7
L__main29:
;c.c,85 :: 		timer_init_value-=5;
0x0480	0x0E05      	MOVLW       5
0x0482	0x5E31      	SUBWF       main_timer_init_value_L0, 1 
;c.c,86 :: 		}
L_main7:
;c.c,88 :: 		timer_value=timer_init_value;
0x0484	0xF030C031  	MOVFF       main_timer_init_value_L0, main_timer_value_L0
;c.c,89 :: 		IntToStr(timer_value,timer_value_char);
0x0488	0xF033C031  	MOVFF       main_timer_init_value_L0, FARG_IntToStr_input
0x048C	0x0E00      	MOVLW       0
0x048E	0x6E34      	MOVWF       FARG_IntToStr_input+1 
0x0490	0x0E21      	MOVLW       main_timer_value_char_L0
0x0492	0x6E35      	MOVWF       FARG_IntToStr_output 
0x0494	0x0E00      	MOVLW       hi_addr(main_timer_value_char_L0)
0x0496	0x6E36      	MOVWF       FARG_IntToStr_output+1 
0x0498	0xDED6      	RCALL       _IntToStr
;c.c,90 :: 		Lcd_Out(1,1,timer_value_char);
0x049A	0x0E01      	MOVLW       1
0x049C	0x6E33      	MOVWF       FARG_Lcd_Out_row 
0x049E	0x0E01      	MOVLW       1
0x04A0	0x6E34      	MOVWF       FARG_Lcd_Out_column 
0x04A2	0x0E21      	MOVLW       main_timer_value_char_L0
0x04A4	0x6E35      	MOVWF       FARG_Lcd_Out_text 
0x04A6	0x0E00      	MOVLW       hi_addr(main_timer_value_char_L0)
0x04A8	0x6E36      	MOVWF       FARG_Lcd_Out_text+1 
0x04AA	0xDF61      	RCALL       _Lcd_Out
;c.c,92 :: 		RA2_OLD=RA2_NEW;
0x04AC	0xF02DC02C  	MOVFF       main_RA2_NEW_L0, main_RA2_OLD_L0
;c.c,93 :: 		RA3_OLD=RA3_NEW;
0x04B0	0xF02FC02E  	MOVFF       main_RA3_NEW_L0, main_RA3_OLD_L0
;c.c,94 :: 		}
0x04B4	0xD7CF      	BRA         L_main0
L_main1:
;c.c,95 :: 		LATD=timer_value;
0x04B6	0xFF8CC030  	MOVFF       main_timer_value_L0, LATD
;c.c,105 :: 		while(timer_value>=0){
L_main8:
0x04BA	0x0E00      	MOVLW       0
0x04BC	0x5C30      	SUBWF       main_timer_value_L0, 0 
0x04BE	0xA0D8      	BTFSS       STATUS, 0 
0x04C0	0xD082      	BRA         L_main9
;c.c,107 :: 		RA0_NEW=PORTA.RA0;
0x04C2	0x0E00      	MOVLW       0
0x04C4	0xB080      	BTFSC       PORTA, 0 
0x04C6	0x0E01      	MOVLW       1
0x04C8	0x6E28      	MOVWF       main_RA0_NEW_L0 
;c.c,108 :: 		RA1_NEW=PORTA.RA1;
0x04CA	0x0E00      	MOVLW       0
0x04CC	0xB280      	BTFSC       PORTA, 1 
0x04CE	0x0E01      	MOVLW       1
0x04D0	0x6E2A      	MOVWF       main_RA1_NEW_L0 
;c.c,110 :: 		if (RA0_NEW && RA0_NEW!=RA0_OLD){
0x04D2	0x5228      	MOVF        main_RA0_NEW_L0, 1 
0x04D4	0xE006      	BZ          L_main12
0x04D6	0x5028      	MOVF        main_RA0_NEW_L0, 0 
0x04D8	0x1829      	XORWF       main_RA0_OLD_L0, 0 
0x04DA	0xE003      	BZ          L_main12
L__main28:
;c.c,111 :: 		go=1;
0x04DC	0x0E01      	MOVLW       1
0x04DE	0x6E32      	MOVWF       main_go_L0 
;c.c,112 :: 		INTCON.TMR0IE=1; //il valore di clock può essere aggiornato
0x04E0	0x8AF2      	BSF         INTCON, 5 
;c.c,114 :: 		}
L_main12:
;c.c,116 :: 		if (RA1_NEW && RA1_NEW!=RA1_OLD){
0x04E2	0x522A      	MOVF        main_RA1_NEW_L0, 1 
0x04E4	0xE005      	BZ          L_main15
0x04E6	0x502A      	MOVF        main_RA1_NEW_L0, 0 
0x04E8	0x182B      	XORWF       main_RA1_OLD_L0, 0 
0x04EA	0xE002      	BZ          L_main15
L__main27:
;c.c,117 :: 		go=0;
0x04EC	0x6A32      	CLRF        main_go_L0 
;c.c,118 :: 		INTCON.TMR0IE=0; //il valore di clock non deve essere aggiornato
0x04EE	0x9AF2      	BCF         INTCON, 5 
;c.c,119 :: 		}
L_main15:
;c.c,121 :: 		RA0_OLD=RA2_NEW;
0x04F0	0xF029C02C  	MOVFF       main_RA2_NEW_L0, main_RA0_OLD_L0
;c.c,122 :: 		RA3_OLD=RA3_NEW;
0x04F4	0xF02FC02E  	MOVFF       main_RA3_NEW_L0, main_RA3_OLD_L0
;c.c,125 :: 		if (counter>100 && go){
0x04F8	0x0E80      	MOVLW       128
0x04FA	0x6E00      	MOVWF       R0 
0x04FC	0x0E80      	MOVLW       128
0x04FE	0x181F      	XORWF       _counter+1, 0 
0x0500	0x5C00      	SUBWF       R0, 0 
0x0502	0xE102      	BNZ         L__main32
0x0504	0x501E      	MOVF        _counter, 0 
0x0506	0x0864      	SUBLW       100
L__main32:
0x0508	0xE21A      	BC          L_main18
0x050A	0x5232      	MOVF        main_go_L0, 1 
0x050C	0xE018      	BZ          L_main18
L__main26:
;c.c,127 :: 		IntToStr(timer_value,timer_value_char);
0x050E	0xF033C030  	MOVFF       main_timer_value_L0, FARG_IntToStr_input
0x0512	0x0E00      	MOVLW       0
0x0514	0x6E34      	MOVWF       FARG_IntToStr_input+1 
0x0516	0x0E21      	MOVLW       main_timer_value_char_L0
0x0518	0x6E35      	MOVWF       FARG_IntToStr_output 
0x051A	0x0E00      	MOVLW       hi_addr(main_timer_value_char_L0)
0x051C	0x6E36      	MOVWF       FARG_IntToStr_output+1 
0x051E	0xDE93      	RCALL       _IntToStr
;c.c,128 :: 		Lcd_Out(1,1,timer_value_char);
0x0520	0x0E01      	MOVLW       1
0x0522	0x6E33      	MOVWF       FARG_Lcd_Out_row 
0x0524	0x0E01      	MOVLW       1
0x0526	0x6E34      	MOVWF       FARG_Lcd_Out_column 
0x0528	0x0E21      	MOVLW       main_timer_value_char_L0
0x052A	0x6E35      	MOVWF       FARG_Lcd_Out_text 
0x052C	0x0E00      	MOVLW       hi_addr(main_timer_value_char_L0)
0x052E	0x6E36      	MOVWF       FARG_Lcd_Out_text+1 
0x0530	0xDF1E      	RCALL       _Lcd_Out
;c.c,129 :: 		timer_value-=1;
0x0532	0x0630      	DECF        main_timer_value_L0, 1 
;c.c,130 :: 		LATD=timer_value;
0x0534	0xFF8CC030  	MOVFF       main_timer_value_L0, LATD
;c.c,131 :: 		counter=0;
0x0538	0x6A1E      	CLRF        _counter 
0x053A	0x6A1F      	CLRF        _counter+1 
;c.c,132 :: 		LATE.RE2=1;
0x053C	0x848D      	BSF         LATE, 2 
;c.c,134 :: 		}
L_main18:
;c.c,137 :: 		if(new_val_adc){
0x053E	0x5215      	MOVF        _new_val_adc, 1 
0x0540	0xE041      	BZ          L_main19
;c.c,138 :: 		val_adc=ADRESH*4+ADRESL/64;
0x0542	0xF002CFC4  	MOVFF       ADRESH, R2
0x0546	0x0E00      	MOVLW       0
0x0548	0x6E03      	MOVWF       R3 
0x054A	0x3602      	RLCF        R2, 1 
0x054C	0x3603      	RLCF        R3, 1 
0x054E	0x9002      	BCF         R2, 0 
0x0550	0x3602      	RLCF        R2, 1 
0x0552	0x3603      	RLCF        R3, 1 
0x0554	0x9002      	BCF         R2, 0 
0x0556	0x0E06      	MOVLW       6
0x0558	0x6E01      	MOVWF       R1 
0x055A	0xF000CFC3  	MOVFF       ADRESL, R0
0x055E	0x5001      	MOVF        R1, 0 
L__main33:
0x0560	0xE004      	BZ          L__main34
0x0562	0x3200      	RRCF        R0, 1 
0x0564	0x9E00      	BCF         R0, 7 
0x0566	0x0FFF      	ADDLW       255
0x0568	0xD7FB      	BRA         L__main33
L__main34:
0x056A	0x0E00      	MOVLW       0
0x056C	0x6E01      	MOVWF       R1 
0x056E	0x5002      	MOVF        R2, 0 
0x0570	0x2600      	ADDWF       R0, 1 
0x0572	0x5003      	MOVF        R3, 0 
0x0574	0x2201      	ADDWFC      R1, 1 
;c.c,143 :: 		if (val_adc*5>2976 && timer_value<timer_init_value-1){ // ho dovuto inserire la seconda condizione perchè le prime letture del adc mi davano un valore alto che non corrispondeva a quello reale ed entrava subito nel if
0x0576	0x0E05      	MOVLW       5
0x0578	0x6E04      	MOVWF       R4 
0x057A	0x0E00      	MOVLW       0
0x057C	0x6E05      	MOVWF       R5 
0x057E	0xDECF      	RCALL       _Mul_16X16_U
0x0580	0x0E80      	MOVLW       128
0x0582	0x0A0B      	XORLW       11
0x0584	0x6E02      	MOVWF       R2 
0x0586	0x0E80      	MOVLW       128
0x0588	0x1801      	XORWF       R1, 0 
0x058A	0x5C02      	SUBWF       R2, 0 
0x058C	0xE102      	BNZ         L__main35
0x058E	0x5000      	MOVF        R0, 0 
0x0590	0x08A0      	SUBLW       160
L__main35:
0x0592	0xE218      	BC          L_main22
0x0594	0x0431      	DECF        main_timer_init_value_L0, 0 
0x0596	0x6E01      	MOVWF       R1 
0x0598	0x6A02      	CLRF        R2 
0x059A	0x0E00      	MOVLW       0
0x059C	0x5A02      	SUBWFB      R2, 1 
0x059E	0x0E80      	MOVLW       128
0x05A0	0x6E00      	MOVWF       R0 
0x05A2	0x0E80      	MOVLW       128
0x05A4	0x1802      	XORWF       R2, 0 
0x05A6	0x5C00      	SUBWF       R0, 0 
0x05A8	0xE102      	BNZ         L__main36
0x05AA	0x5001      	MOVF        R1, 0 
0x05AC	0x5C30      	SUBWF       main_timer_value_L0, 0 
L__main36:
0x05AE	0xE20A      	BC          L_main22
L__main25:
;c.c,144 :: 		Lcd_Out(2,1,"ABORTED");
0x05B0	0x0E02      	MOVLW       2
0x05B2	0x6E33      	MOVWF       FARG_Lcd_Out_row 
0x05B4	0x0E01      	MOVLW       1
0x05B6	0x6E34      	MOVWF       FARG_Lcd_Out_column 
0x05B8	0x0E16      	MOVLW       ?lstr1_c
0x05BA	0x6E35      	MOVWF       FARG_Lcd_Out_text 
0x05BC	0x0E00      	MOVLW       hi_addr(?lstr1_c)
0x05BE	0x6E36      	MOVWF       FARG_Lcd_Out_text+1 
0x05C0	0xDED6      	RCALL       _Lcd_Out
;c.c,145 :: 		go=0;
0x05C2	0x6A32      	CLRF        main_go_L0 
;c.c,146 :: 		}
L_main22:
;c.c,148 :: 		}
L_main19:
;c.c,150 :: 		}
0x05C4	0xD77A      	BRA         L_main8
L_main9:
;c.c,154 :: 		}
L_end_main:
0x05C6	0xD7FF      	BRA         $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [36]    _interrupt
0x002C      [22]    _Delay_5500us
0x0042       [6]    _Delay_1us
0x0048      [10]    _Delay_50us
0x0052      [54]    _Div_16X16_U
0x0088     [124]    _Lcd_Cmd
0x0104      [12]    _Lcd_Chr_CP
0x0110     [144]    _WordToStr
0x01A0      [16]    ___CC2DW
0x01B0     [150]    _Lcd_Init
0x0246     [216]    _IntToStr
0x031E      [80]    _Mul_16X16_U
0x036E     [122]    _Lcd_Out
0x03E8     [480]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0002       [2]    strlen_cp_L0
0x0002       [1]    R2
0x0002       [2]    memset_pp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [2]    memchr_s_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [1]    R4
0x0005       [1]    R5
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [1]    _new_val_adc
0x0016       [8]    ?lstr1_c
0x001E       [2]    _counter
0x0020       [0]    __Lib_Lcd_cmd_status
0x0021       [7]    main_timer_value_char_L0
0x0028       [1]    main_RA0_NEW_L0
0x0029       [1]    main_RA0_OLD_L0
0x002A       [1]    main_RA1_NEW_L0
0x002B       [1]    main_RA1_OLD_L0
0x002C       [1]    main_RA2_NEW_L0
0x002D       [1]    main_RA2_OLD_L0
0x002E       [1]    main_RA3_NEW_L0
0x002F       [1]    main_RA3_OLD_L0
0x0030       [1]    main_timer_value_L0
0x0031       [1]    main_timer_init_value_L0
0x0032       [1]    main_go_L0
0x0033       [1]    FARG_Lcd_Out_row
0x0033       [2]    FARG_IntToStr_input
0x0034       [1]    FARG_Lcd_Out_column
0x0035       [2]    FARG_IntToStr_output
0x0035       [2]    FARG_Lcd_Out_text
0x0037       [2]    IntToStr_i_L0
0x0037       [1]    Lcd_Out_i_L0
0x0039       [2]    IntToStr_negative_L0
0x003B       [2]    IntToStr_inword_L0
0x003D       [2]    FARG_WordToStr_input
0x003D       [1]    FARG_Lcd_Chr_CP_out_char
0x003F       [2]    FARG_WordToStr_output
0x0041       [1]    WordToStr_len_L0
0x0042       [2]    FLOC__WordToStr
0x0044       [1]    FARG_Lcd_Cmd_out_char
0x0F38       [1]    ANSELA
0x0F3B       [1]    ANSELD
0x0F3C       [1]    ANSELE
0x0F80       [1]    PORTA
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LCD_RS
0x0F8A       [0]    LCD_EN
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LCD_D7
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LCD_D6
0x0F8A       [0]    LCD_D4
0x0F8A       [0]    LCD_D5
0x0F8C       [1]    LATD
0x0F8D       [1]    LATE
0x0F92       [1]    TRISA
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    TRISB5_bit
0x0F95       [1]    TRISD
0x0F96       [1]    TRISE
0x0F9D       [1]    PIE1
0x0F9E       [1]    PIR1
0x0FC0       [1]    ADCON2
0x0FC2       [1]    ADCON0
0x0FC3       [1]    ADRESL
0x0FC4       [1]    ADRESH
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
