;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/04/2021 15:52:13
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF001EFC8  	GOTO        912
_interrupt:
;step_3.c,132 :: 		void interrupt(){
;step_3.c,133 :: 		INTCON.GIE=0; // disabilito interrupt
0x0008	0x9EF2      	BCF         INTCON, 7 
;step_3.c,134 :: 		if (INTCON.TMR0IF){
0x000A	0xA4F2      	BTFSS       INTCON, 2 
0x000C	0xD009      	BRA         L_interrupt28
;step_3.c,135 :: 		INTCON.TMR0IF=0;
0x000E	0x94F2      	BCF         INTCON, 2 
;step_3.c,136 :: 		counter_1+=25;
0x0010	0x0E19      	MOVLW       25
0x0012	0x2615      	ADDWF       _counter_1, 1 
0x0014	0x0E00      	MOVLW       0
0x0016	0x2216      	ADDWFC      _counter_1+1, 1 
;step_3.c,137 :: 		counter_2+=25;
0x0018	0x0E19      	MOVLW       25
0x001A	0x2617      	ADDWF       _counter_2, 1 
0x001C	0x0E00      	MOVLW       0
0x001E	0x2218      	ADDWFC      _counter_2+1, 1 
;step_3.c,138 :: 		}
L_interrupt28:
;step_3.c,139 :: 		INTCON.GIE=1;
0x0020	0x8EF2      	BSF         INTCON, 7 
;step_3.c,140 :: 		}
L_end_interrupt:
L__interrupt42:
0x0022	0x0011      	RETFIE      1
; end of _interrupt
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0024	0x0E0F      	MOVLW       15
0x0026	0x6E0C      	MOVWF       R12, 0
0x0028	0x0E47      	MOVLW       71
0x002A	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x002C	0x2E0D      	DECFSZ      R13, 1, 0
0x002E	0xD7FE      	BRA         L_Delay_5500us5
0x0030	0x2E0C      	DECFSZ      R12, 1, 0
0x0032	0xD7FC      	BRA         L_Delay_5500us5
0x0034	0x0000      	NOP
0x0036	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0038	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x003A	0x0E21      	MOVLW       33
0x003C	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x003E	0x2E0D      	DECFSZ      R13, 1, 0
0x0040	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0042	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0044	0x0000      	NOP
0x0046	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0048	0x0012      	RETURN      0
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x004A	0xBE4B      	BTFSC       FARG_Lcd_Cmd_out_char, 7 
0x004C	0xD002      	BRA         L__Lcd_Cmd21
0x004E	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0050	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0052	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0054	0xBC4B      	BTFSC       FARG_Lcd_Cmd_out_char, 6 
0x0056	0xD002      	BRA         L__Lcd_Cmd23
0x0058	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x005A	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x005C	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x005E	0xBA4B      	BTFSC       FARG_Lcd_Cmd_out_char, 5 
0x0060	0xD002      	BRA         L__Lcd_Cmd25
0x0062	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0064	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0066	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x0068	0xB84B      	BTFSC       FARG_Lcd_Cmd_out_char, 4 
0x006A	0xD002      	BRA         L__Lcd_Cmd27
0x006C	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x006E	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0070	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0072	0xB01D      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0074	0xD002      	BRA         L__Lcd_Cmd29
0x0076	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x0078	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x007A	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x007C	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x007E	0xDFE2      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0080	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0082	0xB64B      	BTFSC       FARG_Lcd_Cmd_out_char, 3 
0x0084	0xD002      	BRA         L__Lcd_Cmd31
0x0086	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0088	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x008A	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x008C	0xB44B      	BTFSC       FARG_Lcd_Cmd_out_char, 2 
0x008E	0xD002      	BRA         L__Lcd_Cmd33
0x0090	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0092	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0094	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0096	0xB24B      	BTFSC       FARG_Lcd_Cmd_out_char, 1 
0x0098	0xD002      	BRA         L__Lcd_Cmd35
0x009A	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x009C	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x009E	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00A0	0xB04B      	BTFSC       FARG_Lcd_Cmd_out_char, 0 
0x00A2	0xD002      	BRA         L__Lcd_Cmd37
0x00A4	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00A6	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00A8	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00AA	0xB01D      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00AC	0xD002      	BRA         L__Lcd_Cmd39
0x00AE	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00B0	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00B2	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00B4	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00B6	0xDFC6      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00B8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00BA	0xA01D      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00BC	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00BE	0xDFB2      	RCALL       _Delay_5500us
0x00C0	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00C2	0xDFBB      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00C4	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x00C6	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x00C8	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x00CA	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x00CC	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x00CE	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x00D0	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x00D2	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x00D4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x00D6	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x00D8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x00DA	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x00DC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x00DE	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x00E0	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x00E2	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x00E4	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x00E6	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x00E8	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x00EA	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x00EC	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x00EE	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x00F0	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x00F2	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x00F4	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x00F6	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x00F8	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x00FA	0x0012      	RETURN      0
; end of _Div_16X16_U
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x00FC	0x6A48      	CLRF        WordToStr_len_L0 
L_WordToStr11:
0x00FE	0x0E05      	MOVLW       5
0x0100	0x5C48      	SUBWF       WordToStr_len_L0, 0 
0x0102	0xE20A      	BC          L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x0104	0x5048      	MOVF        WordToStr_len_L0, 0 
0x0106	0x2446      	ADDWF       FARG_WordToStr_output, 0 
0x0108	0x6EE1      	MOVWF       FSR1L 
0x010A	0x0E00      	MOVLW       0
0x010C	0x2047      	ADDWFC      FARG_WordToStr_output+1, 0 
0x010E	0x6EE2      	MOVWF       FSR1L+1 
0x0110	0x0E20      	MOVLW       32
0x0112	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,103 :: 		
0x0114	0x2A48      	INCF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,104 :: 		
0x0116	0xD7F3      	BRA         L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x0118	0x5048      	MOVF        WordToStr_len_L0, 0 
0x011A	0x2446      	ADDWF       FARG_WordToStr_output, 0 
0x011C	0x6EE1      	MOVWF       FSR1L 
0x011E	0x0E00      	MOVLW       0
0x0120	0x2047      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0122	0x6EE2      	MOVWF       FSR1L+1 
0x0124	0x6AE6      	CLRF        POSTINC1 
0x0126	0x0648      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x0128	0x5048      	MOVF        WordToStr_len_L0, 0 
0x012A	0x2446      	ADDWF       FARG_WordToStr_output, 0 
0x012C	0x6E49      	MOVWF       FLOC__WordToStr 
0x012E	0x0E00      	MOVLW       0
0x0130	0x2047      	ADDWFC      FARG_WordToStr_output+1, 0 
0x0132	0x6E4A      	MOVWF       FLOC__WordToStr+1 
0x0134	0x0E0A      	MOVLW       10
0x0136	0x6E04      	MOVWF       R4 
0x0138	0x0E00      	MOVLW       0
0x013A	0x6E05      	MOVWF       R5 
0x013C	0xF000C044  	MOVFF       FARG_WordToStr_input, R0
0x0140	0xF001C045  	MOVFF       FARG_WordToStr_input+1, R1
0x0144	0xDFC0      	RCALL       _Div_16X16_U
0x0146	0xF000C008  	MOVFF       R8, R0
0x014A	0xF001C009  	MOVFF       R9, R1
0x014E	0x0E30      	MOVLW       48
0x0150	0x2600      	ADDWF       R0, 1 
0x0152	0xFFE1C049  	MOVFF       FLOC__WordToStr, FSR1L
0x0156	0xFFE2C04A  	MOVFF       FLOC__WordToStr+1, FSR1H
0x015A	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,109 :: 		
0x015E	0x0E0A      	MOVLW       10
0x0160	0x6E04      	MOVWF       R4 
0x0162	0x0E00      	MOVLW       0
0x0164	0x6E05      	MOVWF       R5 
0x0166	0xF000C044  	MOVFF       FARG_WordToStr_input, R0
0x016A	0xF001C045  	MOVFF       FARG_WordToStr_input+1, R1
0x016E	0xDFAB      	RCALL       _Div_16X16_U
0x0170	0xF044C000  	MOVFF       R0, FARG_WordToStr_input
0x0174	0xF045C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x0178	0x0E00      	MOVLW       0
0x017A	0x1801      	XORWF       R1, 0 
0x017C	0xE102      	BNZ         L__WordToStr379
0x017E	0x0E00      	MOVLW       0
0x0180	0x1800      	XORWF       R0, 0 
L__WordToStr379:
0x0182	0xE101      	BNZ         L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0184	0xD002      	BRA         L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x0186	0x0648      	DECF        WordToStr_len_L0, 1 
;__Lib_Conversions.c,113 :: 		
0x0188	0xD7CF      	BRA         L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x018A	0x0012      	RETURN      0
; end of _WordToStr
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x018C	0x901D      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x018E	0xF04BC044  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x0192	0xDF5B      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0194	0x801D      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0196	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0198	0x9A93      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x019A	0x9893      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x019C	0x9093      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x019E	0x9293      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x01A0	0x9493      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x01A2	0x9693      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x01A4	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x01A6	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x01A8	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x01AA	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x01AC	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x01AE	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x01B0	0xDF39      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x01B2	0xDF38      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x01B4	0xDF37      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x01B6	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x01B8	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x01BA	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x01BC	0xDF43      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x01BE	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x01C0	0xDF31      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x01C2	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x01C4	0xDF3F      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x01C6	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x01C8	0xDF2D      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x01CA	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x01CC	0xDF3B      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x01CE	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x01D0	0xDF29      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x01D2	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x01D4	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x01D6	0xDF36      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x01D8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x01DA	0xDF24      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x01DC	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x01DE	0xDF32      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x01E0	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x01E2	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x01E4	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x01E6	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x01E8	0xDF2D      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x01EA	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x01EC	0xDF1B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x01EE	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x01F0	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x01F2	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x01F4	0xDF27      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x01F6	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x01F8	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x01FA	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x01FC	0xDF23      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x01FE	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0200	0xDF11      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0202	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0204	0xDF1F      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0206	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0208	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x020A	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x020C	0xDF1B      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x020E	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0210	0xDF09      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0212	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x0214	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x0216	0xDF16      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x0218	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x021A	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x021C	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x021E	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x0220	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x0222	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x0224	0xDF0F      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x0226	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x0228	0xDEFD      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x022A	0x801D      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x022C	0x0012      	RETURN      0
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x022E	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0230	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0234	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x0236	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0238	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x023A	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x023C	0x0012      	RETURN      0
; end of ___CC2DW
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x023E	0x6A40      	CLRF        IntToStr_negative_L0 
0x0240	0x6A41      	CLRF        IntToStr_negative_L0+1 
;__Lib_Conversions.c,202 :: 		
0x0242	0xF042C03A  	MOVFF       FARG_IntToStr_input, IntToStr_inword_L0
0x0246	0xF043C03B  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x024A	0x0E80      	MOVLW       128
0x024C	0x183B      	XORWF       FARG_IntToStr_input+1, 0 
0x024E	0x6E00      	MOVWF       R0 
0x0250	0x0E80      	MOVLW       128
0x0252	0x5C00      	SUBWF       R0, 0 
0x0254	0xE102      	BNZ         L__IntToStr387
0x0256	0x0E00      	MOVLW       0
0x0258	0x5C3A      	SUBWF       FARG_IntToStr_input, 0 
L__IntToStr387:
0x025A	0xE20B      	BC          L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x025C	0x0E01      	MOVLW       1
0x025E	0x6E40      	MOVWF       IntToStr_negative_L0 
0x0260	0x0E00      	MOVLW       0
0x0262	0x6E41      	MOVWF       IntToStr_negative_L0+1 
;__Lib_Conversions.c,205 :: 		
0x0264	0x503A      	MOVF        FARG_IntToStr_input, 0 
0x0266	0x0800      	SUBLW       0
0x0268	0x6E42      	MOVWF       IntToStr_inword_L0 
0x026A	0xF043C03B  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
0x026E	0x0E00      	MOVLW       0
0x0270	0x5643      	SUBFWB      IntToStr_inword_L0+1, 1 
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x0272	0xF044C042  	MOVFF       IntToStr_inword_L0, FARG_WordToStr_input
0x0276	0xF045C043  	MOVFF       IntToStr_inword_L0+1, FARG_WordToStr_input+1
0x027A	0xF046C03C  	MOVFF       FARG_IntToStr_output, FARG_WordToStr_output
0x027E	0xF047C03D  	MOVFF       FARG_IntToStr_output+1, FARG_WordToStr_output+1
0x0282	0xDF3C      	RCALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x0284	0x0E06      	MOVLW       6
0x0286	0x6E3E      	MOVWF       IntToStr_i_L0 
0x0288	0x0E00      	MOVLW       0
0x028A	0x6E3F      	MOVWF       IntToStr_i_L0+1 
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x028C	0x0E00      	MOVLW       0
0x028E	0x6E00      	MOVWF       R0 
0x0290	0x503F      	MOVF        IntToStr_i_L0+1, 0 
0x0292	0x5C00      	SUBWF       R0, 0 
0x0294	0xE102      	BNZ         L__IntToStr388
0x0296	0x503E      	MOVF        IntToStr_i_L0, 0 
0x0298	0x0800      	SUBLW       0
L__IntToStr388:
0x029A	0xE219      	BC          L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x029C	0x503E      	MOVF        IntToStr_i_L0, 0 
0x029E	0x243C      	ADDWF       FARG_IntToStr_output, 0 
0x02A0	0x6EE1      	MOVWF       FSR1L 
0x02A2	0x503F      	MOVF        IntToStr_i_L0+1, 0 
0x02A4	0x203D      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02A6	0x6EE2      	MOVWF       FSR1L+1 
0x02A8	0x0E01      	MOVLW       1
0x02AA	0x5C3E      	SUBWF       IntToStr_i_L0, 0 
0x02AC	0x6E00      	MOVWF       R0 
0x02AE	0x0E00      	MOVLW       0
0x02B0	0x583F      	SUBWFB      IntToStr_i_L0+1, 0 
0x02B2	0x6E01      	MOVWF       R1 
0x02B4	0x5000      	MOVF        R0, 0 
0x02B6	0x243C      	ADDWF       FARG_IntToStr_output, 0 
0x02B8	0x6EE9      	MOVWF       FSR0L 
0x02BA	0x5001      	MOVF        R1, 0 
0x02BC	0x203D      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02BE	0x6EEA      	MOVWF       FSR0L+1 
0x02C0	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,212 :: 		
0x02C4	0x0E01      	MOVLW       1
0x02C6	0x5E3E      	SUBWF       IntToStr_i_L0, 1 
0x02C8	0x0E00      	MOVLW       0
0x02CA	0x5A3F      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,213 :: 		
0x02CC	0xD7DF      	BRA         L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x02CE	0xFFE1C03C  	MOVFF       FARG_IntToStr_output, FSR1L
0x02D2	0xFFE2C03D  	MOVFF       FARG_IntToStr_output+1, FSR1H
0x02D6	0x0E20      	MOVLW       32
0x02D8	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,215 :: 		
0x02DA	0x5040      	MOVF        IntToStr_negative_L0, 0 
0x02DC	0x1041      	IORWF       IntToStr_negative_L0+1, 0 
0x02DE	0xE01A      	BZ          L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x02E0	0x6A3E      	CLRF        IntToStr_i_L0 
0x02E2	0x6A3F      	CLRF        IntToStr_i_L0+1 
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x02E4	0x503E      	MOVF        IntToStr_i_L0, 0 
0x02E6	0x243C      	ADDWF       FARG_IntToStr_output, 0 
0x02E8	0x6EE9      	MOVWF       FSR0L 
0x02EA	0x503F      	MOVF        IntToStr_i_L0+1, 0 
0x02EC	0x203D      	ADDWFC      FARG_IntToStr_output+1, 0 
0x02EE	0x6EEA      	MOVWF       FSR0L+1 
0x02F0	0x50EE      	MOVF        POSTINC0, 0 
0x02F2	0x0A20      	XORLW       32
0x02F4	0xE103      	BNZ         L_IntToStr42
0x02F6	0x4A3E      	INFSNZ      IntToStr_i_L0, 1 
0x02F8	0x2A3F      	INCF        IntToStr_i_L0+1, 1 
0x02FA	0xD7F4      	BRA         L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x02FC	0x0E01      	MOVLW       1
0x02FE	0x5E3E      	SUBWF       IntToStr_i_L0, 1 
0x0300	0x0E00      	MOVLW       0
0x0302	0x5A3F      	SUBWFB      IntToStr_i_L0+1, 1 
;__Lib_Conversions.c,219 :: 		
0x0304	0x503E      	MOVF        IntToStr_i_L0, 0 
0x0306	0x243C      	ADDWF       FARG_IntToStr_output, 0 
0x0308	0x6EE1      	MOVWF       FSR1L 
0x030A	0x503F      	MOVF        IntToStr_i_L0+1, 0 
0x030C	0x203D      	ADDWFC      FARG_IntToStr_output+1, 0 
0x030E	0x6EE2      	MOVWF       FSR1L+1 
0x0310	0x0E2D      	MOVLW       45
0x0312	0x6EE6      	MOVWF       POSTINC1 
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x0314	0x0012      	RETURN      0
; end of _IntToStr
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x0316	0xD00F      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x0318	0x0E80      	MOVLW       128
0x031A	0x6E3A      	MOVWF       FARG_Lcd_Out_row 
0x031C	0xD019      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x031E	0x0EC0      	MOVLW       192
0x0320	0x6E3A      	MOVWF       FARG_Lcd_Out_row 
0x0322	0xD016      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x0324	0x0E94      	MOVLW       148
0x0326	0x6E3A      	MOVWF       FARG_Lcd_Out_row 
0x0328	0xD013      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x032A	0x0ED4      	MOVLW       212
0x032C	0x6E3A      	MOVWF       FARG_Lcd_Out_row 
0x032E	0xD010      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x0330	0x0E80      	MOVLW       128
0x0332	0x6E3A      	MOVWF       FARG_Lcd_Out_row 
;__Lib_Lcd.c,193 :: 		
0x0334	0xD00D      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x0336	0x503A      	MOVF        FARG_Lcd_Out_row, 0 
0x0338	0x0A01      	XORLW       1
0x033A	0xE0EE      	BZ          L_Lcd_Out13
0x033C	0x503A      	MOVF        FARG_Lcd_Out_row, 0 
0x033E	0x0A02      	XORLW       2
0x0340	0xE0EE      	BZ          L_Lcd_Out14
0x0342	0x503A      	MOVF        FARG_Lcd_Out_row, 0 
0x0344	0x0A03      	XORLW       3
0x0346	0xE0EE      	BZ          L_Lcd_Out15
0x0348	0x503A      	MOVF        FARG_Lcd_Out_row, 0 
0x034A	0x0A04      	XORLW       4
0x034C	0xE0EE      	BZ          L_Lcd_Out16
0x034E	0xD7F0      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0350	0x043B      	DECF        FARG_Lcd_Out_column, 0 
0x0352	0x6E00      	MOVWF       R0 
0x0354	0x503A      	MOVF        FARG_Lcd_Out_row, 0 
0x0356	0x2600      	ADDWF       R0, 1 
0x0358	0xF03AC000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x035C	0xF04BC000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0360	0xDE74      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0362	0x901D      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x0364	0x6A3E      	CLRF        Lcd_Out_i_L0 
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0366	0x503E      	MOVF        Lcd_Out_i_L0, 0 
0x0368	0x243C      	ADDWF       FARG_Lcd_Out_text, 0 
0x036A	0x6EE9      	MOVWF       FSR0L 
0x036C	0x0E00      	MOVLW       0
0x036E	0x203D      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0370	0x6EEA      	MOVWF       FSR0L+1 
0x0372	0x52EE      	MOVF        POSTINC0, 1 
0x0374	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x0376	0x503E      	MOVF        Lcd_Out_i_L0, 0 
0x0378	0x243C      	ADDWF       FARG_Lcd_Out_text, 0 
0x037A	0x6EE9      	MOVWF       FSR0L 
0x037C	0x0E00      	MOVLW       0
0x037E	0x203D      	ADDWFC      FARG_Lcd_Out_text+1, 0 
0x0380	0x6EEA      	MOVWF       FSR0L+1 
0x0382	0xF044CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x0386	0xDF02      	RCALL       _Lcd_Chr_CP
0x0388	0x2A3E      	INCF        Lcd_Out_i_L0, 1 
0x038A	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x038C	0x801D      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x038E	0x0012      	RETURN      0
; end of _Lcd_Out
_main:
0x0390	0x6A15      	CLRF        _counter_1 
0x0392	0x6A16      	CLRF        22 
0x0394	0x6A17      	CLRF        _counter_2 
0x0396	0x6A18      	CLRF        24 
0x0398	0x0E30      	MOVLW       48
0x039A	0x6E19      	MOVWF       ?lstr1_step_3 
0x039C	0x6A1A      	CLRF        26 
0x039E	0x0E30      	MOVLW       48
0x03A0	0x6E1B      	MOVWF       ?lstr2_step_3 
0x03A2	0x6A1C      	CLRF        28 
;step_3.c,22 :: 		void main() {
;step_3.c,26 :: 		unsigned short int dx=0b00000001; // parte destra del effetto (primi 4 bit)
0x03A4	0x0E01      	MOVLW       1
0x03A6	0x6E1E      	MOVWF       main_dx_L0 
0x03A8	0x0E80      	MOVLW       128
0x03AA	0x6E1F      	MOVWF       main_sx_L0 
0x03AC	0x6A20      	CLRF        main_dir_L0 
0x03AE	0x0EF4      	MOVLW       244
0x03B0	0x6E21      	MOVWF       main_delay_kitt_L0 
0x03B2	0x0E01      	MOVLW       1
0x03B4	0x6E22      	MOVWF       main_delay_kitt_L0+1 
0x03B6	0x0EDC      	MOVLW       220
0x03B8	0x6E23      	MOVWF       main_delay_kitt_max_L0 
0x03BA	0x0E05      	MOVLW       5
0x03BC	0x6E24      	MOVWF       main_delay_kitt_max_L0+1 
0x03BE	0x0E64      	MOVLW       100
0x03C0	0x6E25      	MOVWF       main_delay_kitt_min_L0 
0x03C2	0x0E00      	MOVLW       0
0x03C4	0x6E26      	MOVWF       main_delay_kitt_min_L0+1 
0x03C6	0x6A27      	CLRF        main_cron_val_L0 
0x03C8	0x6A28      	CLRF        main_cron_condition_L0 
0x03CA	0x6A29      	CLRF        main_A_L0 
0x03CC	0x6A2A      	CLRF        main_A_L0+1 
0x03CE	0x6A2B      	CLRF        main_A_L0+2 
0x03D0	0x6A2C      	CLRF        main_A_L0+3 
0x03D2	0x6A2D      	CLRF        main_A_old_L0 
0x03D4	0x6A2E      	CLRF        main_A_old_L0+1 
0x03D6	0x6A2F      	CLRF        main_A_old_L0+2 
0x03D8	0x6A30      	CLRF        main_A_old_L0+3 
0x03DA	0x6A31      	CLRF        main_C_L0 
0x03DC	0x6A32      	CLRF        main_C_old_L0 
;step_3.c,45 :: 		TRISD=0;//accendo buffer di output
0x03DE	0x6A95      	CLRF        TRISD 
;step_3.c,46 :: 		LATD=0x00000000; // valore inziale portd :tutto spento
0x03E0	0x6A8C      	CLRF        LATD 
;step_3.c,48 :: 		TRISA=0b00011111;//
0x03E2	0x0E1F      	MOVLW       31
0x03E4	0x6E92      	MOVWF       TRISA 
;step_3.c,49 :: 		ANSELA=0b11100000;// accendo buffer d'ingresso per porte 0 1 2 3 4
0x03E6	0x0EE0      	MOVLW       224
0x03E8	0x010F      	MOVLB       15
0x03EA	0x6F38      	MOVWF       ANSELA, 1
;step_3.c,51 :: 		TRISC=0b00011111;//
0x03EC	0x0E1F      	MOVLW       31
0x03EE	0x6E94      	MOVWF       TRISC 
;step_3.c,52 :: 		ANSELC=0b11111110;// accendo buffer d'ingresso per porte 0 1 2 3 4
0x03F0	0x0EFE      	MOVLW       254
0x03F2	0x6F3A      	MOVWF       ANSELC, 1
;step_3.c,55 :: 		Lcd_Init(); // inizzializza LCD
0x03F4	0xDED1      	RCALL       _Lcd_Init
;step_3.c,56 :: 		Lcd_Cmd(_LCD_CLEAR);// metti il cursore in posizione uno
0x03F6	0x0E01      	MOVLW       1
0x03F8	0x6E4B      	MOVWF       FARG_Lcd_Cmd_out_char 
0x03FA	0xDE27      	RCALL       _Lcd_Cmd
;step_3.c,57 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);// nacondi il cursore
0x03FC	0x0E0C      	MOVLW       12
0x03FE	0x6E4B      	MOVWF       FARG_Lcd_Cmd_out_char 
0x0400	0xDE24      	RCALL       _Lcd_Cmd
;step_3.c,58 :: 		Lcd_Out(1,1,"0");
0x0402	0x0E01      	MOVLW       1
0x0404	0x6E3A      	MOVWF       FARG_Lcd_Out_row 
0x0406	0x0E01      	MOVLW       1
0x0408	0x6E3B      	MOVWF       FARG_Lcd_Out_column 
0x040A	0x0E19      	MOVLW       ?lstr1_step_3
0x040C	0x6E3C      	MOVWF       FARG_Lcd_Out_text 
0x040E	0x0E00      	MOVLW       hi_addr(?lstr1_step_3)
0x0410	0x6E3D      	MOVWF       FARG_Lcd_Out_text+1 
0x0412	0xDF81      	RCALL       _Lcd_Out
;step_3.c,60 :: 		T0CON=0b11000111;// timer 0 configuration: (1):enable timer-(1):8bit-(0):selcet internal clock-(0):selcte edge-(0):activate prescalar-(111):prescaler value
0x0414	0x0EC7      	MOVLW       199
0x0416	0x6ED5      	MOVWF       T0CON 
;step_3.c,61 :: 		TMR0L=0x3D;
0x0418	0x0E3D      	MOVLW       61
0x041A	0x6ED6      	MOVWF       TMR0L 
;step_3.c,62 :: 		INTCON=0b10100000; // interruprt configuration: (1):GIE-(0):disable periphal interupt-(1):TMR0IE(0):INT0IE(0):RBIE-(0):TMR0IF(0):INT0IF(0)
0x041C	0x0EA0      	MOVLW       160
0x041E	0x6EF2      	MOVWF       INTCON 
;step_3.c,65 :: 		while (1){
L_main0:
;step_3.c,67 :: 		if(counter_1>delay_kitt) {
0x0420	0x0E80      	MOVLW       128
0x0422	0x1822      	XORWF       main_delay_kitt_L0+1, 0 
0x0424	0x6E00      	MOVWF       R0 
0x0426	0x0E80      	MOVLW       128
0x0428	0x1816      	XORWF       _counter_1+1, 0 
0x042A	0x5C00      	SUBWF       R0, 0 
0x042C	0xE102      	BNZ         L__main37
0x042E	0x5015      	MOVF        _counter_1, 0 
0x0430	0x5C21      	SUBWF       main_delay_kitt_L0, 0 
L__main37:
0x0432	0xE22B      	BC          L_main2
;step_3.c,68 :: 		if (dir==0){
0x0434	0x5020      	MOVF        main_dir_L0, 0 
0x0436	0x0A00      	XORLW       0
0x0438	0xE10B      	BNZ         L_main3
;step_3.c,69 :: 		LATD=LATD+dx+sx; //PORTD=PORTD+dx+sx;  //cosi non funziona e non capisco perchè
0x043A	0x501E      	MOVF        main_dx_L0, 0 
0x043C	0x248C      	ADDWF       LATD, 0 
0x043E	0x6E00      	MOVWF       R0 
0x0440	0x501F      	MOVF        main_sx_L0, 0 
0x0442	0x2400      	ADDWF       R0, 0 
0x0444	0x6E8C      	MOVWF       LATD 
;step_3.c,70 :: 		dx<<=1;
0x0446	0x361E      	RLCF        main_dx_L0, 1 
0x0448	0x901E      	BCF         main_dx_L0, 0 
;step_3.c,71 :: 		sx>>=1;
0x044A	0x321F      	RRCF        main_sx_L0, 1 
0x044C	0x9E1F      	BCF         main_sx_L0, 7 
;step_3.c,72 :: 		}
0x044E	0xD012      	BRA         L_main4
L_main3:
;step_3.c,74 :: 		dx>>=1;
0x0450	0xF002C01E  	MOVFF       main_dx_L0, R2
0x0454	0x3202      	RRCF        R2, 1 
0x0456	0x9E02      	BCF         R2, 7 
0x0458	0xF01EC002  	MOVFF       R2, main_dx_L0
;step_3.c,75 :: 		sx<<=1;
0x045C	0xF001C01F  	MOVFF       main_sx_L0, R1
0x0460	0x3601      	RLCF        R1, 1 
0x0462	0x9001      	BCF         R1, 0 
0x0464	0xF01FC001  	MOVFF       R1, main_sx_L0
;step_3.c,76 :: 		LATD=LATD-dx-sx;
0x0468	0x5002      	MOVF        R2, 0 
0x046A	0x5C8C      	SUBWF       LATD, 0 
0x046C	0x6E00      	MOVWF       R0 
0x046E	0x5001      	MOVF        R1, 0 
0x0470	0x5C00      	SUBWF       R0, 0 
0x0472	0x6E8C      	MOVWF       LATD 
;step_3.c,77 :: 		}
L_main4:
;step_3.c,79 :: 		if (LATD==0b11111111){ // siamo al centro e dx=00010000 sx=0000100
0x0474	0x508C      	MOVF        LATD, 0 
0x0476	0x0AFF      	XORLW       255
0x0478	0xE102      	BNZ         L_main5
;step_3.c,80 :: 		dir=1;
0x047A	0x0E01      	MOVLW       1
0x047C	0x6E20      	MOVWF       main_dir_L0 
;step_3.c,81 :: 		}
L_main5:
;step_3.c,82 :: 		if (LATD==0b00000000){
0x047E	0x508C      	MOVF        LATD, 0 
0x0480	0x0A00      	XORLW       0
0x0482	0xB4D8      	BTFSC       STATUS, 2 
;step_3.c,83 :: 		dir=0;
0x0484	0x6A20      	CLRF        main_dir_L0 
;step_3.c,84 :: 		}
L_main6:
;step_3.c,86 :: 		counter_1=0; //riazzera il counter
0x0486	0x6A15      	CLRF        _counter_1 
0x0488	0x6A16      	CLRF        _counter_1+1 
;step_3.c,87 :: 		}
L_main2:
;step_3.c,89 :: 		if (counter_2>1000 && cron_condition==1 ){ // counter 2 ha superato un secondo e il cronometro è accesso
0x048A	0x0E80      	MOVLW       128
0x048C	0x0A03      	XORLW       3
0x048E	0x6E00      	MOVWF       R0 
0x0490	0x0E80      	MOVLW       128
0x0492	0x1818      	XORWF       _counter_2+1, 0 
0x0494	0x5C00      	SUBWF       R0, 0 
0x0496	0xE102      	BNZ         L__main38
0x0498	0x5017      	MOVF        _counter_2, 0 
0x049A	0x08E8      	SUBLW       232
L__main38:
0x049C	0xE206      	BC          L_main9
0x049E	0x5028      	MOVF        main_cron_condition_L0, 0 
0x04A0	0x0A01      	XORLW       1
0x04A2	0xE103      	BNZ         L_main9
L__main35:
;step_3.c,90 :: 		counter_2=0; // riazzero subito counter 2 perhè le istruzioni successive possono causarmi del offset
0x04A4	0x6A17      	CLRF        _counter_2 
0x04A6	0x6A18      	CLRF        _counter_2+1 
;step_3.c,91 :: 		cron_val+=1; // non devo preoccuparmi degli overflow di cron_val perchè le specifiche richiedono che arrivi ad un massimo di 255
0x04A8	0x2A27      	INCF        main_cron_val_L0, 1 
;step_3.c,93 :: 		}
L_main9:
;step_3.c,95 :: 		A[0]=PORTA.RA0;
0x04AA	0x0E00      	MOVLW       0
0x04AC	0xB080      	BTFSC       PORTA, 0 
0x04AE	0x0E01      	MOVLW       1
0x04B0	0x6E29      	MOVWF       main_A_L0 
;step_3.c,96 :: 		A[1]=PORTA.RA1;
0x04B2	0x0E00      	MOVLW       0
0x04B4	0xB280      	BTFSC       PORTA, 1 
0x04B6	0x0E01      	MOVLW       1
0x04B8	0x6E2A      	MOVWF       main_A_L0+1 
;step_3.c,97 :: 		A[2]=PORTA.RA2;
0x04BA	0x0E00      	MOVLW       0
0x04BC	0xB480      	BTFSC       PORTA, 2 
0x04BE	0x0E01      	MOVLW       1
0x04C0	0x6E2B      	MOVWF       main_A_L0+2 
;step_3.c,98 :: 		A[3]=PORTA.RA3;
0x04C2	0x0E00      	MOVLW       0
0x04C4	0xB680      	BTFSC       PORTA, 3 
0x04C6	0x0E01      	MOVLW       1
0x04C8	0x6E2C      	MOVWF       main_A_L0+3 
;step_3.c,99 :: 		A[4]=PORTA.RA4;
0x04CA	0x0E00      	MOVLW       0
0x04CC	0xB880      	BTFSC       PORTA, 4 
0x04CE	0x0E01      	MOVLW       1
0x04D0	0x6E2D      	MOVWF       main_A_L0+4 
;step_3.c,101 :: 		if (A[0]&& A_old[0]!=A[0]){ // se premo RA0 fai partire il cronometro
0x04D2	0x5229      	MOVF        main_A_L0, 1 
0x04D4	0xE005      	BZ          L_main12
0x04D6	0x502D      	MOVF        main_A_old_L0, 0 
0x04D8	0x1829      	XORWF       main_A_L0, 0 
0x04DA	0xE002      	BZ          L_main12
L__main34:
;step_3.c,102 :: 		cron_condition=1;
0x04DC	0x0E01      	MOVLW       1
0x04DE	0x6E28      	MOVWF       main_cron_condition_L0 
;step_3.c,103 :: 		}
L_main12:
;step_3.c,104 :: 		if (A[1]&& A_old[1]!=A[1]){ // se premo RA1 stoppa il cronometro
0x04E0	0x522A      	MOVF        main_A_L0+1, 1 
0x04E2	0xE004      	BZ          L_main15
0x04E4	0x502E      	MOVF        main_A_old_L0+1, 0 
0x04E6	0x182A      	XORWF       main_A_L0+1, 0 
0x04E8	0xA4D8      	BTFSS       STATUS, 2 
L__main33:
;step_3.c,105 :: 		cron_condition=0;
0x04EA	0x6A28      	CLRF        main_cron_condition_L0 
;step_3.c,106 :: 		}
L_main15:
;step_3.c,107 :: 		if (A[2]&& A_old[2]!=A[2]){ // se premo RA2 resetta il cronometro
0x04EC	0x522B      	MOVF        main_A_L0+2, 1 
0x04EE	0xE00D      	BZ          L_main18
0x04F0	0x502F      	MOVF        main_A_old_L0+2, 0 
0x04F2	0x182B      	XORWF       main_A_L0+2, 0 
0x04F4	0xE00A      	BZ          L_main18
L__main32:
;step_3.c,108 :: 		cron_val=0;
0x04F6	0x6A27      	CLRF        main_cron_val_L0 
;step_3.c,109 :: 		Lcd_Out(1,1,"0"); // mostrta che l'hai riazzerato
0x04F8	0x0E01      	MOVLW       1
0x04FA	0x6E3A      	MOVWF       FARG_Lcd_Out_row 
0x04FC	0x0E01      	MOVLW       1
0x04FE	0x6E3B      	MOVWF       FARG_Lcd_Out_column 
0x0500	0x0E1B      	MOVLW       ?lstr2_step_3
0x0502	0x6E3C      	MOVWF       FARG_Lcd_Out_text 
0x0504	0x0E00      	MOVLW       hi_addr(?lstr2_step_3)
0x0506	0x6E3D      	MOVWF       FARG_Lcd_Out_text+1 
0x0508	0xDF06      	RCALL       _Lcd_Out
;step_3.c,110 :: 		}
L_main18:
;step_3.c,111 :: 		if (A[3] && A_old[3]!=A[3] && delay_kitt<delay_kitt_max){ // se premo RA3 aumenta il kitt delay
0x050A	0x522C      	MOVF        main_A_L0+3, 1 
0x050C	0xE011      	BZ          L_main21
0x050E	0x5030      	MOVF        main_A_old_L0+3, 0 
0x0510	0x182C      	XORWF       main_A_L0+3, 0 
0x0512	0xE00E      	BZ          L_main21
0x0514	0x0E80      	MOVLW       128
0x0516	0x1822      	XORWF       main_delay_kitt_L0+1, 0 
0x0518	0x6E00      	MOVWF       R0 
0x051A	0x0E80      	MOVLW       128
0x051C	0x1824      	XORWF       main_delay_kitt_max_L0+1, 0 
0x051E	0x5C00      	SUBWF       R0, 0 
0x0520	0xE102      	BNZ         L__main39
0x0522	0x5023      	MOVF        main_delay_kitt_max_L0, 0 
0x0524	0x5C21      	SUBWF       main_delay_kitt_L0, 0 
L__main39:
0x0526	0xE204      	BC          L_main21
L__main31:
;step_3.c,112 :: 		delay_kitt+=50;
0x0528	0x0E32      	MOVLW       50
0x052A	0x2621      	ADDWF       main_delay_kitt_L0, 1 
0x052C	0x0E00      	MOVLW       0
0x052E	0x2222      	ADDWFC      main_delay_kitt_L0+1, 1 
;step_3.c,113 :: 		}
L_main21:
;step_3.c,114 :: 		if (A[4] &&  A_old[4]!=A[4] && delay_kitt>delay_kitt_min){ // se premo RA4 diminuisci il kitt delay
0x0530	0x522D      	MOVF        main_A_L0+4, 1 
0x0532	0xE011      	BZ          L_main24
0x0534	0x5031      	MOVF        main_A_old_L0+4, 0 
0x0536	0x182D      	XORWF       main_A_L0+4, 0 
0x0538	0xE00E      	BZ          L_main24
0x053A	0x0E80      	MOVLW       128
0x053C	0x1826      	XORWF       main_delay_kitt_min_L0+1, 0 
0x053E	0x6E00      	MOVWF       R0 
0x0540	0x0E80      	MOVLW       128
0x0542	0x1822      	XORWF       main_delay_kitt_L0+1, 0 
0x0544	0x5C00      	SUBWF       R0, 0 
0x0546	0xE102      	BNZ         L__main40
0x0548	0x5021      	MOVF        main_delay_kitt_L0, 0 
0x054A	0x5C25      	SUBWF       main_delay_kitt_min_L0, 0 
L__main40:
0x054C	0xE204      	BC          L_main24
L__main30:
;step_3.c,115 :: 		delay_kitt-=50;
0x054E	0x0E32      	MOVLW       50
0x0550	0x5E21      	SUBWF       main_delay_kitt_L0, 1 
0x0552	0x0E00      	MOVLW       0
0x0554	0x5A22      	SUBWFB      main_delay_kitt_L0+1, 1 
;step_3.c,116 :: 		}
L_main24:
;step_3.c,117 :: 		A_old[0]=A[0];
0x0556	0xF02DC029  	MOVFF       main_A_L0, main_A_old_L0
;step_3.c,118 :: 		A_old[1]=A[1];
0x055A	0xF02EC02A  	MOVFF       main_A_L0+1, main_A_old_L0+1
;step_3.c,119 :: 		A_old[2]=A[2];
0x055E	0xF02FC02B  	MOVFF       main_A_L0+2, main_A_old_L0+2
;step_3.c,120 :: 		A_old[3]=A[3];
0x0562	0xF030C02C  	MOVFF       main_A_L0+3, main_A_old_L0+3
;step_3.c,121 :: 		A_old[4]=A[4];
0x0566	0xF031C02D  	MOVFF       main_A_L0+4, main_A_old_L0+4
;step_3.c,123 :: 		C=PORTC.RC0;
0x056A	0x0E00      	MOVLW       0
0x056C	0xB082      	BTFSC       PORTC, 0 
0x056E	0x0E01      	MOVLW       1
0x0570	0x6E31      	MOVWF       main_C_L0 
;step_3.c,124 :: 		if (C && C_old!=C){ // se premo RC0 aggiorna il display
0x0572	0x5231      	MOVF        main_C_L0, 1 
0x0574	0xE015      	BZ          L_main27
0x0576	0x5032      	MOVF        main_C_old_L0, 0 
0x0578	0x1831      	XORWF       main_C_L0, 0 
0x057A	0xE012      	BZ          L_main27
L__main29:
;step_3.c,125 :: 		IntToStr(cron_val,cron_char);
0x057C	0xF03AC027  	MOVFF       main_cron_val_L0, FARG_IntToStr_input
0x0580	0x0E00      	MOVLW       0
0x0582	0x6E3B      	MOVWF       FARG_IntToStr_input+1 
0x0584	0x0E33      	MOVLW       main_cron_char_L0
0x0586	0x6E3C      	MOVWF       FARG_IntToStr_output 
0x0588	0x0E00      	MOVLW       hi_addr(main_cron_char_L0)
0x058A	0x6E3D      	MOVWF       FARG_IntToStr_output+1 
0x058C	0xDE58      	RCALL       _IntToStr
;step_3.c,126 :: 		Lcd_Out(1,1,cron_char);
0x058E	0x0E01      	MOVLW       1
0x0590	0x6E3A      	MOVWF       FARG_Lcd_Out_row 
0x0592	0x0E01      	MOVLW       1
0x0594	0x6E3B      	MOVWF       FARG_Lcd_Out_column 
0x0596	0x0E33      	MOVLW       main_cron_char_L0
0x0598	0x6E3C      	MOVWF       FARG_Lcd_Out_text 
0x059A	0x0E00      	MOVLW       hi_addr(main_cron_char_L0)
0x059C	0x6E3D      	MOVWF       FARG_Lcd_Out_text+1 
0x059E	0xDEBB      	RCALL       _Lcd_Out
;step_3.c,127 :: 		}
L_main27:
;step_3.c,128 :: 		}
0x05A0	0xD73F      	BRA         L_main0
;step_3.c,130 :: 		}
L_end_main:
0x05A2	0xD7FF      	BRA         $+0
; end of _main
;step_3.c,0 :: ?ICSmain_dx_L0
0x05A4	0x01 ;?ICSmain_dx_L0+0
; end of ?ICSmain_dx_L0
;step_3.c,0 :: ?ICSmain_sx_L0
0x05A5	0x80 ;?ICSmain_sx_L0+0
; end of ?ICSmain_sx_L0
;step_3.c,0 :: ?ICSmain_dir_L0
0x05A6	0x00 ;?ICSmain_dir_L0+0
; end of ?ICSmain_dir_L0
;step_3.c,0 :: ?ICSmain_delay_kitt_L0
0x05A7	0x01F4 ;?ICSmain_delay_kitt_L0+0
; end of ?ICSmain_delay_kitt_L0
;step_3.c,0 :: ?ICSmain_delay_kitt_max_L0
0x05A9	0x05DC ;?ICSmain_delay_kitt_max_L0+0
; end of ?ICSmain_delay_kitt_max_L0
;step_3.c,0 :: ?ICSmain_delay_kitt_min_L0
0x05AB	0x0064 ;?ICSmain_delay_kitt_min_L0+0
; end of ?ICSmain_delay_kitt_min_L0
;step_3.c,0 :: ?ICSmain_cron_val_L0
0x05AD	0x00 ;?ICSmain_cron_val_L0+0
; end of ?ICSmain_cron_val_L0
;step_3.c,0 :: ?ICSmain_cron_condition_L0
0x05AE	0x00 ;?ICSmain_cron_condition_L0+0
; end of ?ICSmain_cron_condition_L0
;step_3.c,0 :: ?ICSmain_A_L0
0x05AF	0x0000 ;?ICSmain_A_L0+0
0x05B1	0x0000 ;?ICSmain_A_L0+2
; end of ?ICSmain_A_L0
;step_3.c,0 :: ?ICSmain_A_old_L0
0x05B3	0x0000 ;?ICSmain_A_old_L0+0
0x05B5	0x0000 ;?ICSmain_A_old_L0+2
; end of ?ICSmain_A_old_L0
;step_3.c,0 :: ?ICSmain_C_L0
0x05B7	0x00 ;?ICSmain_C_L0+0
; end of ?ICSmain_C_L0
;step_3.c,0 :: ?ICSmain_C_old_L0
0x05B8	0x00 ;?ICSmain_C_old_L0+0
; end of ?ICSmain_C_old_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [28]    _interrupt
0x0024      [22]    _Delay_5500us
0x003A      [10]    _Delay_50us
0x0044       [6]    _Delay_1us
0x004A     [124]    _Lcd_Cmd
0x00C6      [54]    _Div_16X16_U
0x00FC     [144]    _WordToStr
0x018C      [12]    _Lcd_Chr_CP
0x0198     [150]    _Lcd_Init
0x022E      [16]    ___CC2DW
0x023E     [216]    _IntToStr
0x0316     [122]    _Lcd_Out
0x0390     [532]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    R2
0x0002       [2]    memchr_s_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0003       [2]    memmove_tt_L0
0x0003       [2]    Ltrim_original_L0
0x0003       [1]    R3
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    memcpy_ss_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _counter_1
0x0017       [2]    _counter_2
0x0019       [2]    ?lstr1_step_3
0x001B       [2]    ?lstr2_step_3
0x001D       [0]    __Lib_Lcd_cmd_status
0x001E       [1]    main_dx_L0
0x001F       [1]    main_sx_L0
0x0020       [1]    main_dir_L0
0x0021       [2]    main_delay_kitt_L0
0x0023       [2]    main_delay_kitt_max_L0
0x0025       [2]    main_delay_kitt_min_L0
0x0027       [1]    main_cron_val_L0
0x0028       [1]    main_cron_condition_L0
0x0029       [4]    main_A_L0
0x002D       [4]    main_A_old_L0
0x0031       [1]    main_C_L0
0x0032       [1]    main_C_old_L0
0x0033       [7]    main_cron_char_L0
0x003A       [2]    FARG_IntToStr_input
0x003A       [1]    FARG_Lcd_Out_row
0x003B       [1]    FARG_Lcd_Out_column
0x003C       [2]    FARG_Lcd_Out_text
0x003C       [2]    FARG_IntToStr_output
0x003E       [2]    IntToStr_i_L0
0x003E       [1]    Lcd_Out_i_L0
0x0040       [2]    IntToStr_negative_L0
0x0042       [2]    IntToStr_inword_L0
0x0044       [2]    FARG_WordToStr_input
0x0044       [1]    FARG_Lcd_Chr_CP_out_char
0x0046       [2]    FARG_WordToStr_output
0x0048       [1]    WordToStr_len_L0
0x0049       [2]    FLOC__WordToStr
0x004B       [1]    FARG_Lcd_Cmd_out_char
0x0F38       [1]    ANSELA
0x0F3A       [1]    ANSELC
0x0F80       [1]    PORTA
0x0F82       [1]    PORTC
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LCD_D4
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LCD_D5
0x0F8A       [0]    LCD_D7
0x0F8A       [0]    LCD_D6
0x0F8A       [0]    LCD_RS
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB4_bit
0x0F8A       [0]    LCD_EN
0x0F8A       [0]    LATB3_bit
0x0F8C       [1]    LATD
0x0F92       [1]    TRISA
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    LCD_RS_Direction
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB3_bit
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x05A4       [1]    ?ICSmain_dx_L0
0x05A5       [1]    ?ICSmain_sx_L0
0x05A6       [1]    ?ICSmain_dir_L0
0x05A7       [2]    ?ICSmain_delay_kitt_L0
0x05A9       [2]    ?ICSmain_delay_kitt_max_L0
0x05AB       [2]    ?ICSmain_delay_kitt_min_L0
0x05AD       [1]    ?ICSmain_cron_val_L0
0x05AE       [1]    ?ICSmain_cron_condition_L0
0x05AF       [4]    ?ICSmain_A_L0
0x05B3       [4]    ?ICSmain_A_old_L0
0x05B7       [1]    ?ICSmain_C_L0
0x05B8       [1]    ?ICSmain_C_old_L0
