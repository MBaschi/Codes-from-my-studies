;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 17/04/2021 16:42:27
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF002EF24  	GOTO        1096
_interrupt:
;step_4.c,174 :: 		void interrupt(){
;step_4.c,175 :: 		INTCON.GIE=0; // disabilito interrupt
0x0008	0x9EF2      	BCF         INTCON, 7 
;step_4.c,176 :: 		if (INTCON.TMR0IF){
0x000A	0xA4F2      	BTFSS       INTCON, 2 
0x000C	0xD009      	BRA         L_interrupt30
;step_4.c,177 :: 		INTCON.TMR0IF=0;
0x000E	0x94F2      	BCF         INTCON, 2 
;step_4.c,178 :: 		counter_1+=25;
0x0010	0x0E19      	MOVLW       25
0x0012	0x2623      	ADDWF       _counter_1, 1 
0x0014	0x0E00      	MOVLW       0
0x0016	0x2224      	ADDWFC      _counter_1+1, 1 
;step_4.c,179 :: 		counter_2+=25;
0x0018	0x0E19      	MOVLW       25
0x001A	0x2625      	ADDWF       _counter_2, 1 
0x001C	0x0E00      	MOVLW       0
0x001E	0x2226      	ADDWFC      _counter_2+1, 1 
;step_4.c,180 :: 		}
L_interrupt30:
;step_4.c,181 :: 		INTCON.GIE=1;
0x0020	0x8EF2      	BSF         INTCON, 7 
;step_4.c,182 :: 		}
L_end_interrupt:
L__interrupt44:
0x0022	0x0011      	RETFIE      1
; end of _interrupt
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0024	0x0E0F      	MOVLW       15
0x0026	0x6E0C      	MOVWF       R12, 0
0x0028	0x0E47      	MOVLW       71
0x002A	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x002C	0x2E0D      	DECFSZ      R13, 1, 0
0x002E	0xD7FE      	BRA         L_Delay_5500us5
0x0030	0x2E0C      	DECFSZ      R12, 1, 0
0x0032	0xD7FC      	BRA         L_Delay_5500us5
0x0034	0x0000      	NOP
0x0036	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0038	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x003A	0x0E21      	MOVLW       33
0x003C	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x003E	0x2E0D      	DECFSZ      R13, 1, 0
0x0040	0xD7FE      	BRA         L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0042	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0044	0x0000      	NOP
0x0046	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0048	0x0012      	RETURN      0
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x004A	0x0100      	MOVLB       0
0x004C	0xBF7A      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x004E	0xD002      	BRA         L__Lcd_Cmd21
0x0050	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0052	0xD001      	BRA         L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0054	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0056	0xBD7A      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x0058	0xD002      	BRA         L__Lcd_Cmd23
0x005A	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x005C	0xD001      	BRA         L__Lcd_Cmd24
L__Lcd_Cmd23:
0x005E	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0060	0xBB7A      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x0062	0xD002      	BRA         L__Lcd_Cmd25
0x0064	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0066	0xD001      	BRA         L__Lcd_Cmd26
L__Lcd_Cmd25:
0x0068	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x006A	0xB97A      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x006C	0xD002      	BRA         L__Lcd_Cmd27
0x006E	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0070	0xD001      	BRA         L__Lcd_Cmd28
L__Lcd_Cmd27:
0x0072	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0074	0xB031      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x0076	0xD002      	BRA         L__Lcd_Cmd29
0x0078	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x007A	0xD001      	BRA         L__Lcd_Cmd30
L__Lcd_Cmd29:
0x007C	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x007E	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x0080	0xDFE1      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0082	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0084	0xB77A      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x0086	0xD002      	BRA         L__Lcd_Cmd31
0x0088	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x008A	0xD001      	BRA         L__Lcd_Cmd32
L__Lcd_Cmd31:
0x008C	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x008E	0xB57A      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x0090	0xD002      	BRA         L__Lcd_Cmd33
0x0092	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x0094	0xD001      	BRA         L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0096	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0098	0xB37A      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x009A	0xD002      	BRA         L__Lcd_Cmd35
0x009C	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x009E	0xD001      	BRA         L__Lcd_Cmd36
L__Lcd_Cmd35:
0x00A0	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x00A2	0xB17A      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x00A4	0xD002      	BRA         L__Lcd_Cmd37
0x00A6	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00A8	0xD001      	BRA         L__Lcd_Cmd38
L__Lcd_Cmd37:
0x00AA	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x00AC	0xB031      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00AE	0xD002      	BRA         L__Lcd_Cmd39
0x00B0	0x888A      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00B2	0xD001      	BRA         L__Lcd_Cmd40
L__Lcd_Cmd39:
0x00B4	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x00B6	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00B8	0xDFC5      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00BA	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00BC	0xA031      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
0x00BE	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00C0	0xDFB1      	RCALL       _Delay_5500us
0x00C2	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00C4	0xDFBA      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x00C6	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Div_16X16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x00C8	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x00CA	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x00CC	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x00CE	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x00D0	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x00D2	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x00D4	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x00D6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x00D8	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x00DA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x00DC	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x00DE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x00E0	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x00E2	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x00E4	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x00E6	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x00E8	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x00EA	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x00EC	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x00EE	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x00F0	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x00F2	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x00F4	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x00F6	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x00F8	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x00FA	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
L_end_Div_16X16_U:
0x00FC	0x0012      	RETURN      0
; end of _Div_16X16_U
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x00FE	0x9031      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,53 :: 		
0x0100	0xF07AC073  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x0104	0xDFA2      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0106	0x8031      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0108	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_WordToStr:
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
0x010A	0x0100      	MOVLB       0
0x010C	0x6B77      	CLRF        WordToStr_len_L0, 1
L_WordToStr11:
0x010E	0x0E05      	MOVLW       5
0x0110	0x5D77      	SUBWF       WordToStr_len_L0, 0, 1
0x0112	0xE20A      	BC          L_WordToStr12
;__Lib_Conversions.c,104 :: 		
0x0114	0x5177      	MOVF        WordToStr_len_L0, 0, 1
0x0116	0x2575      	ADDWF       FARG_WordToStr_output, 0, 1
0x0118	0x6EE1      	MOVWF       FSR1L 
0x011A	0x0E00      	MOVLW       0
0x011C	0x2176      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x011E	0x6EE2      	MOVWF       FSR1L+1 
0x0120	0x0E20      	MOVLW       32
0x0122	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,103 :: 		
0x0124	0x2B77      	INCF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,104 :: 		
0x0126	0xD7F3      	BRA         L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x0128	0x5177      	MOVF        WordToStr_len_L0, 0, 1
0x012A	0x2575      	ADDWF       FARG_WordToStr_output, 0, 1
0x012C	0x6EE1      	MOVWF       FSR1L 
0x012E	0x0E00      	MOVLW       0
0x0130	0x2176      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0132	0x6EE2      	MOVWF       FSR1L+1 
0x0134	0x6AE6      	CLRF        POSTINC1 
0x0136	0x0777      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
0x0138	0x5177      	MOVF        WordToStr_len_L0, 0, 1
0x013A	0x2575      	ADDWF       FARG_WordToStr_output, 0, 1
0x013C	0x6F78      	MOVWF       FLOC__WordToStr, 1
0x013E	0x0E00      	MOVLW       0
0x0140	0x2176      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0142	0x6F79      	MOVWF       FLOC__WordToStr+1, 1
0x0144	0x0E0A      	MOVLW       10
0x0146	0x6E04      	MOVWF       R4 
0x0148	0x0E00      	MOVLW       0
0x014A	0x6E05      	MOVWF       R5 
0x014C	0xF000C073  	MOVFF       FARG_WordToStr_input, R0
0x0150	0xF001C074  	MOVFF       FARG_WordToStr_input+1, R1
0x0154	0xDFB9      	RCALL       _Div_16X16_U
0x0156	0xF000C008  	MOVFF       R8, R0
0x015A	0xF001C009  	MOVFF       R9, R1
0x015E	0x0E30      	MOVLW       48
0x0160	0x2600      	ADDWF       R0, 1 
0x0162	0xFFE1C078  	MOVFF       FLOC__WordToStr, FSR1L
0x0166	0xFFE2C079  	MOVFF       FLOC__WordToStr+1, FSR1H
0x016A	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,109 :: 		
0x016E	0x0E0A      	MOVLW       10
0x0170	0x6E04      	MOVWF       R4 
0x0172	0x0E00      	MOVLW       0
0x0174	0x6E05      	MOVWF       R5 
0x0176	0xF000C073  	MOVFF       FARG_WordToStr_input, R0
0x017A	0xF001C074  	MOVFF       FARG_WordToStr_input+1, R1
0x017E	0xDFA4      	RCALL       _Div_16X16_U
0x0180	0xF073C000  	MOVFF       R0, FARG_WordToStr_input
0x0184	0xF074C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,110 :: 		
0x0188	0x0E00      	MOVLW       0
0x018A	0x1801      	XORWF       R1, 0 
0x018C	0xE102      	BNZ         L__WordToStr379
0x018E	0x0E00      	MOVLW       0
0x0190	0x1800      	XORWF       R0, 0 
L__WordToStr379:
0x0192	0xE101      	BNZ         L_WordToStr16
;__Lib_Conversions.c,111 :: 		
0x0194	0xD002      	BRA         L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
0x0196	0x0777      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,113 :: 		
0x0198	0xD7CF      	BRA         L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x019A	0x0012      	RETURN      0
; end of _WordToStr
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x019C	0x9A93      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x019E	0x9893      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x01A0	0x9093      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x01A2	0x9293      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x01A4	0x9493      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x01A6	0x9693      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x01A8	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x01AA	0x988A      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x01AC	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x01AE	0x948A      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x01B0	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x01B2	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x01B4	0xDF37      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x01B6	0xDF36      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x01B8	0xDF35      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x01BA	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x01BC	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x01BE	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x01C0	0xDF41      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x01C2	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x01C4	0xDF2F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x01C6	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x01C8	0xDF3D      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x01CA	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x01CC	0xDF2B      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x01CE	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x01D0	0xDF39      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x01D2	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x01D4	0xDF27      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x01D6	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x01D8	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x01DA	0xDF34      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x01DC	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x01DE	0xDF22      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x01E0	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x01E2	0xDF30      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x01E4	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x01E6	0x928A      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x01E8	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x01EA	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x01EC	0xDF2B      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x01EE	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x01F0	0xDF19      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x01F2	0x968A      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x01F4	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x01F6	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x01F8	0xDF25      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x01FA	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x01FC	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x01FE	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x0200	0xDF21      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x0202	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x0204	0xDF0F      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0206	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0208	0xDF1D      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x020A	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x020C	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x020E	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x0210	0xDF19      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x0212	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x0214	0xDF07      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x0216	0x908A      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x0218	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x021A	0xDF14      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x021C	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x021E	0x868A      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x0220	0x848A      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x0222	0x828A      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x0224	0x808A      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x0226	0x8A8A      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x0228	0xDF0D      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x022A	0x9A8A      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x022C	0xDEFB      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x022E	0x8031      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x0230	0x0012      	RETURN      0
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0232	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0234	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x0238	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x023A	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x023C	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x023E	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0240	0x0012      	RETURN      0
; end of ___CC2DW
_strcpy:
;__Lib_CString.c,126 :: 		
;__Lib_CString.c,129 :: 		
0x0242	0xF004C069  	MOVFF       FARG_strcpy_to, R4
0x0246	0xF005C06A  	MOVFF       FARG_strcpy_to+1, R5
;__Lib_CString.c,130 :: 		
L_strcpy34:
0x024A	0xF002C004  	MOVFF       R4, R2
0x024E	0xF003C005  	MOVFF       R5, R3
0x0252	0x4A04      	INFSNZ      R4, 1 
0x0254	0x2A05      	INCF        R5, 1 
0x0256	0xF000C06B  	MOVFF       FARG_strcpy_from, R0
0x025A	0xF001C06C  	MOVFF       FARG_strcpy_from+1, R1
0x025E	0x0100      	MOVLB       0
0x0260	0x4B6B      	INFSNZ      FARG_strcpy_from, 1, 1
0x0262	0x2B6C      	INCF        FARG_strcpy_from+1, 1, 1
0x0264	0xFFE9C000  	MOVFF       R0, FSR0L
0x0268	0xFFEAC001  	MOVFF       R1, FSR0H
0x026C	0xFFE1C002  	MOVFF       R2, FSR1L
0x0270	0xFFE2C003  	MOVFF       R3, FSR1H
0x0274	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x0278	0xFFE9C002  	MOVFF       R2, FSR0L
0x027C	0xFFEAC003  	MOVFF       R3, FSR0H
0x0280	0x52EE      	MOVF        POSTINC0, 1 
0x0282	0xE001      	BZ          L_strcpy35
;__Lib_CString.c,131 :: 		
0x0284	0xD7E2      	BRA         L_strcpy34
L_strcpy35:
;__Lib_CString.c,132 :: 		
0x0286	0xF000C069  	MOVFF       FARG_strcpy_to, R0
0x028A	0xF001C06A  	MOVFF       FARG_strcpy_to+1, R1
;__Lib_CString.c,133 :: 		
L_end_strcpy:
0x028E	0x0012      	RETURN      0
; end of _strcpy
_IntToStr:
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x0290	0x0100      	MOVLB       0
0x0292	0x6B6F      	CLRF        IntToStr_negative_L0, 1
0x0294	0x6B70      	CLRF        IntToStr_negative_L0+1, 1
;__Lib_Conversions.c,202 :: 		
0x0296	0xF071C069  	MOVFF       FARG_IntToStr_input, IntToStr_inword_L0
0x029A	0xF072C06A  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
;__Lib_Conversions.c,203 :: 		
0x029E	0x0E80      	MOVLW       128
0x02A0	0x196A      	XORWF       FARG_IntToStr_input+1, 0, 1
0x02A2	0x6E00      	MOVWF       R0 
0x02A4	0x0E80      	MOVLW       128
0x02A6	0x5C00      	SUBWF       R0, 0 
0x02A8	0xE102      	BNZ         L__IntToStr387
0x02AA	0x0E00      	MOVLW       0
0x02AC	0x5D69      	SUBWF       FARG_IntToStr_input, 0, 1
L__IntToStr387:
0x02AE	0xE20B      	BC          L_IntToStr37
;__Lib_Conversions.c,204 :: 		
0x02B0	0x0E01      	MOVLW       1
0x02B2	0x6F6F      	MOVWF       IntToStr_negative_L0, 1
0x02B4	0x0E00      	MOVLW       0
0x02B6	0x6F70      	MOVWF       IntToStr_negative_L0+1, 1
;__Lib_Conversions.c,205 :: 		
0x02B8	0x5169      	MOVF        FARG_IntToStr_input, 0, 1
0x02BA	0x0800      	SUBLW       0
0x02BC	0x6F71      	MOVWF       IntToStr_inword_L0, 1
0x02BE	0xF072C06A  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
0x02C2	0x0E00      	MOVLW       0
0x02C4	0x5772      	SUBFWB      IntToStr_inword_L0+1, 1, 1
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
0x02C6	0xF073C071  	MOVFF       IntToStr_inword_L0, FARG_WordToStr_input
0x02CA	0xF074C072  	MOVFF       IntToStr_inword_L0+1, FARG_WordToStr_input+1
0x02CE	0xF075C06B  	MOVFF       FARG_IntToStr_output, FARG_WordToStr_output
0x02D2	0xF076C06C  	MOVFF       FARG_IntToStr_output+1, FARG_WordToStr_output+1
0x02D6	0xDF19      	RCALL       _WordToStr
;__Lib_Conversions.c,209 :: 		
0x02D8	0x0E06      	MOVLW       6
0x02DA	0x6F6D      	MOVWF       IntToStr_i_L0, 1
0x02DC	0x0E00      	MOVLW       0
0x02DE	0x6F6E      	MOVWF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
0x02E0	0x0E00      	MOVLW       0
0x02E2	0x6E00      	MOVWF       R0 
0x02E4	0x516E      	MOVF        IntToStr_i_L0+1, 0, 1
0x02E6	0x5C00      	SUBWF       R0, 0 
0x02E8	0xE102      	BNZ         L__IntToStr388
0x02EA	0x516D      	MOVF        IntToStr_i_L0, 0, 1
0x02EC	0x0800      	SUBLW       0
L__IntToStr388:
0x02EE	0xE219      	BC          L_IntToStr39
;__Lib_Conversions.c,211 :: 		
0x02F0	0x516D      	MOVF        IntToStr_i_L0, 0, 1
0x02F2	0x256B      	ADDWF       FARG_IntToStr_output, 0, 1
0x02F4	0x6EE1      	MOVWF       FSR1L 
0x02F6	0x516E      	MOVF        IntToStr_i_L0+1, 0, 1
0x02F8	0x216C      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x02FA	0x6EE2      	MOVWF       FSR1L+1 
0x02FC	0x0E01      	MOVLW       1
0x02FE	0x5D6D      	SUBWF       IntToStr_i_L0, 0, 1
0x0300	0x6E00      	MOVWF       R0 
0x0302	0x0E00      	MOVLW       0
0x0304	0x596E      	SUBWFB      IntToStr_i_L0+1, 0, 1
0x0306	0x6E01      	MOVWF       R1 
0x0308	0x5000      	MOVF        R0, 0 
0x030A	0x256B      	ADDWF       FARG_IntToStr_output, 0, 1
0x030C	0x6EE9      	MOVWF       FSR0L 
0x030E	0x5001      	MOVF        R1, 0 
0x0310	0x216C      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x0312	0x6EEA      	MOVWF       FSR0L+1 
0x0314	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,212 :: 		
0x0318	0x0E01      	MOVLW       1
0x031A	0x5F6D      	SUBWF       IntToStr_i_L0, 1, 1
0x031C	0x0E00      	MOVLW       0
0x031E	0x5B6E      	SUBWFB      IntToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,213 :: 		
0x0320	0xD7DF      	BRA         L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x0322	0xFFE1C06B  	MOVFF       FARG_IntToStr_output, FSR1L
0x0326	0xFFE2C06C  	MOVFF       FARG_IntToStr_output+1, FSR1H
0x032A	0x0E20      	MOVLW       32
0x032C	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,215 :: 		
0x032E	0x516F      	MOVF        IntToStr_negative_L0, 0, 1
0x0330	0x1170      	IORWF       IntToStr_negative_L0+1, 0, 1
0x0332	0xE01A      	BZ          L_IntToStr40
;__Lib_Conversions.c,216 :: 		
0x0334	0x6B6D      	CLRF        IntToStr_i_L0, 1
0x0336	0x6B6E      	CLRF        IntToStr_i_L0+1, 1
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
0x0338	0x516D      	MOVF        IntToStr_i_L0, 0, 1
0x033A	0x256B      	ADDWF       FARG_IntToStr_output, 0, 1
0x033C	0x6EE9      	MOVWF       FSR0L 
0x033E	0x516E      	MOVF        IntToStr_i_L0+1, 0, 1
0x0340	0x216C      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x0342	0x6EEA      	MOVWF       FSR0L+1 
0x0344	0x50EE      	MOVF        POSTINC0, 0 
0x0346	0x0A20      	XORLW       32
0x0348	0xE103      	BNZ         L_IntToStr42
0x034A	0x4B6D      	INFSNZ      IntToStr_i_L0, 1, 1
0x034C	0x2B6E      	INCF        IntToStr_i_L0+1, 1, 1
0x034E	0xD7F4      	BRA         L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x0350	0x0E01      	MOVLW       1
0x0352	0x5F6D      	SUBWF       IntToStr_i_L0, 1, 1
0x0354	0x0E00      	MOVLW       0
0x0356	0x5B6E      	SUBWFB      IntToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,219 :: 		
0x0358	0x516D      	MOVF        IntToStr_i_L0, 0, 1
0x035A	0x256B      	ADDWF       FARG_IntToStr_output, 0, 1
0x035C	0x6EE1      	MOVWF       FSR1L 
0x035E	0x516E      	MOVF        IntToStr_i_L0+1, 0, 1
0x0360	0x216C      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x0362	0x6EE2      	MOVWF       FSR1L+1 
0x0364	0x0E2D      	MOVLW       45
0x0366	0x6EE6      	MOVWF       POSTINC1 
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x0368	0x0012      	RETURN      0
; end of _IntToStr
_strcat:
;__Lib_CString.c,87 :: 		
;__Lib_CString.c,90 :: 		
0x036A	0xF004C069  	MOVFF       FARG_strcat_to, R4
0x036E	0xF005C06A  	MOVFF       FARG_strcat_to+1, R5
;__Lib_CString.c,91 :: 		
L_strcat22:
0x0372	0xFFE9C004  	MOVFF       R4, FSR0L
0x0376	0xFFEAC005  	MOVFF       R5, FSR0H
0x037A	0x52EE      	MOVF        POSTINC0, 1 
0x037C	0xE003      	BZ          L_strcat23
;__Lib_CString.c,92 :: 		
0x037E	0x4A04      	INFSNZ      R4, 1 
0x0380	0x2A05      	INCF        R5, 1 
0x0382	0xD7F7      	BRA         L_strcat22
L_strcat23:
;__Lib_CString.c,93 :: 		
L_strcat24:
0x0384	0xF002C004  	MOVFF       R4, R2
0x0388	0xF003C005  	MOVFF       R5, R3
0x038C	0x4A04      	INFSNZ      R4, 1 
0x038E	0x2A05      	INCF        R5, 1 
0x0390	0xF000C06B  	MOVFF       FARG_strcat_from, R0
0x0394	0xF001C06C  	MOVFF       FARG_strcat_from+1, R1
0x0398	0x0100      	MOVLB       0
0x039A	0x4B6B      	INFSNZ      FARG_strcat_from, 1, 1
0x039C	0x2B6C      	INCF        FARG_strcat_from+1, 1, 1
0x039E	0xFFE9C000  	MOVFF       R0, FSR0L
0x03A2	0xFFEAC001  	MOVFF       R1, FSR0H
0x03A6	0xFFE1C002  	MOVFF       R2, FSR1L
0x03AA	0xFFE2C003  	MOVFF       R3, FSR1H
0x03AE	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
0x03B2	0xFFE9C002  	MOVFF       R2, FSR0L
0x03B6	0xFFEAC003  	MOVFF       R3, FSR0H
0x03BA	0x52EE      	MOVF        POSTINC0, 1 
0x03BC	0xE001      	BZ          L_strcat25
;__Lib_CString.c,94 :: 		
0x03BE	0xD7E2      	BRA         L_strcat24
L_strcat25:
;__Lib_CString.c,95 :: 		
0x03C0	0xF000C069  	MOVFF       FARG_strcat_to, R0
0x03C4	0xF001C06A  	MOVFF       FARG_strcat_to+1, R1
;__Lib_CString.c,96 :: 		
L_end_strcat:
0x03C8	0x0012      	RETURN      0
; end of _strcat
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x03CA	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x03CC	0x0E80      	MOVLW       128
0x03CE	0x0100      	MOVLB       0
0x03D0	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
0x03D2	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x03D4	0x0EC0      	MOVLW       192
0x03D6	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
0x03D8	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x03DA	0x0E94      	MOVLW       148
0x03DC	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
0x03DE	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x03E0	0x0ED4      	MOVLW       212
0x03E2	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
0x03E4	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x03E6	0x0E80      	MOVLW       128
0x03E8	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x03EA	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x03EC	0x0100      	MOVLB       0
0x03EE	0x5169      	MOVF        FARG_Lcd_Out_row, 0, 1
0x03F0	0x0A01      	XORLW       1
0x03F2	0xE0EC      	BZ          L_Lcd_Out13
0x03F4	0x5169      	MOVF        FARG_Lcd_Out_row, 0, 1
0x03F6	0x0A02      	XORLW       2
0x03F8	0xE0ED      	BZ          L_Lcd_Out14
0x03FA	0x5169      	MOVF        FARG_Lcd_Out_row, 0, 1
0x03FC	0x0A03      	XORLW       3
0x03FE	0xE0ED      	BZ          L_Lcd_Out15
0x0400	0x5169      	MOVF        FARG_Lcd_Out_row, 0, 1
0x0402	0x0A04      	XORLW       4
0x0404	0xE0ED      	BZ          L_Lcd_Out16
0x0406	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x0408	0x056A      	DECF        FARG_Lcd_Out_column, 0, 1
0x040A	0x6E00      	MOVWF       R0 
0x040C	0x5169      	MOVF        FARG_Lcd_Out_row, 0, 1
0x040E	0x2600      	ADDWF       R0, 1 
0x0410	0xF069C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0414	0xF07AC000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x0418	0xDE18      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x041A	0x9031      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,198 :: 		
0x041C	0x6B6D      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x041E	0x516D      	MOVF        Lcd_Out_i_L0, 0, 1
0x0420	0x256B      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0422	0x6EE9      	MOVWF       FSR0L 
0x0424	0x0E00      	MOVLW       0
0x0426	0x216C      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0428	0x6EEA      	MOVWF       FSR0L+1 
0x042A	0x52EE      	MOVF        POSTINC0, 1 
0x042C	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x042E	0x516D      	MOVF        Lcd_Out_i_L0, 0, 1
0x0430	0x256B      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0432	0x6EE9      	MOVWF       FSR0L 
0x0434	0x0E00      	MOVLW       0
0x0436	0x216C      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0438	0x6EEA      	MOVWF       FSR0L+1 
0x043A	0xF073CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x043E	0xDE5F      	RCALL       _Lcd_Chr_CP
0x0440	0x2B6D      	INCF        Lcd_Out_i_L0, 1, 1
0x0442	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0444	0x8031      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0) 
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0446	0x0012      	RETURN      0
; end of _Lcd_Out
_main:
0x0448	0xF003ECEE  	CALL        2012, 0
;step_4.c,22 :: 		void main() {
;step_4.c,26 :: 		unsigned short int dx=0b00000001; // parte destra del effetto (primi 4 bit)
0x044C	0x0E01      	MOVLW       1
0x044E	0x6E32      	MOVWF       main_dx_L0 
0x0450	0x0E80      	MOVLW       128
0x0452	0x6E33      	MOVWF       main_sx_L0 
0x0454	0x6A34      	CLRF        main_dir_L0 
0x0456	0x0EF4      	MOVLW       244
0x0458	0x6E35      	MOVWF       main_delay_kitt_L0 
0x045A	0x0E01      	MOVLW       1
0x045C	0x6E36      	MOVWF       main_delay_kitt_L0+1 
0x045E	0x0EDC      	MOVLW       220
0x0460	0x6E37      	MOVWF       main_delay_kitt_max_L0 
0x0462	0x0E05      	MOVLW       5
0x0464	0x6E38      	MOVWF       main_delay_kitt_max_L0+1 
0x0466	0x0E64      	MOVLW       100
0x0468	0x6E39      	MOVWF       main_delay_kitt_min_L0 
0x046A	0x0E00      	MOVLW       0
0x046C	0x6E3A      	MOVWF       main_delay_kitt_min_L0+1 
0x046E	0x6A3B      	CLRF        main_cron_condition_L0 
0x0470	0x6A3C      	CLRF        main_A_L0 
0x0472	0x6A3D      	CLRF        main_A_L0+1 
0x0474	0x6A3E      	CLRF        main_A_L0+2 
0x0476	0x6A3F      	CLRF        main_A_L0+3 
0x0478	0x6A40      	CLRF        main_A_old_L0 
0x047A	0x6A41      	CLRF        main_A_old_L0+1 
0x047C	0x6A42      	CLRF        main_A_old_L0+2 
0x047E	0x6A43      	CLRF        main_A_old_L0+3 
0x0480	0x6A44      	CLRF        main_C_L0 
0x0482	0x6A45      	CLRF        main_C_old_L0 
0x0484	0x6A46      	CLRF        main_h_L0 
0x0486	0x6A47      	CLRF        main_m_L0 
0x0488	0x6A48      	CLRF        main_s_L0 
0x048A	0x6A49      	CLRF        main_ms_L0 
;step_4.c,52 :: 		strcpy(tot_char,"-");
0x048C	0x0E66      	MOVLW       main_tot_char_L0
0x048E	0x0100      	MOVLB       0
0x0490	0x6F69      	MOVWF       FARG_strcpy_to, 1
0x0492	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x0494	0x6F6A      	MOVWF       FARG_strcpy_to+1, 1
0x0496	0x0E15      	MOVLW       ?lstr1_step_4
0x0498	0x6F6B      	MOVWF       FARG_strcpy_from, 1
0x049A	0x0E00      	MOVLW       hi_addr(?lstr1_step_4)
0x049C	0x6F6C      	MOVWF       FARG_strcpy_from+1, 1
0x049E	0xDED1      	RCALL       _strcpy
;step_4.c,55 :: 		TRISD=0;//accendo buffer di output
0x04A0	0x6A95      	CLRF        TRISD 
;step_4.c,56 :: 		LATD=0x00000000; // valore inziale portd :tutto spento
0x04A2	0x6A8C      	CLRF        LATD 
;step_4.c,58 :: 		TRISA=0b00011111;//
0x04A4	0x0E1F      	MOVLW       31
0x04A6	0x6E92      	MOVWF       TRISA 
;step_4.c,59 :: 		ANSELA=0b11100000;// accendo buffer d'ingresso per porte 0 1 2 3 4
0x04A8	0x0EE0      	MOVLW       224
0x04AA	0x010F      	MOVLB       15
0x04AC	0x6F38      	MOVWF       ANSELA, 1
;step_4.c,61 :: 		TRISC=0b00011111;//
0x04AE	0x0E1F      	MOVLW       31
0x04B0	0x6E94      	MOVWF       TRISC 
;step_4.c,62 :: 		ANSELC=0b11111110;// accendo buffer d'ingresso per porte 0 1 2 3 4
0x04B2	0x0EFE      	MOVLW       254
0x04B4	0x6F3A      	MOVWF       ANSELC, 1
;step_4.c,65 :: 		Lcd_Init(); // inizzializza LCD
0x04B6	0xDE72      	RCALL       _Lcd_Init
;step_4.c,66 :: 		Lcd_Cmd(_LCD_CLEAR);// metti il cursore in posizione uno
0x04B8	0x0E01      	MOVLW       1
0x04BA	0x0100      	MOVLB       0
0x04BC	0x6F7A      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x04BE	0xDDC5      	RCALL       _Lcd_Cmd
;step_4.c,67 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);// nacondi il cursore
0x04C0	0x0E0C      	MOVLW       12
0x04C2	0x6F7A      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x04C4	0xDDC2      	RCALL       _Lcd_Cmd
;step_4.c,68 :: 		Lcd_Out(1,1,"0:0:0:0");
0x04C6	0x0E01      	MOVLW       1
0x04C8	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
0x04CA	0x0E01      	MOVLW       1
0x04CC	0x6F6A      	MOVWF       FARG_Lcd_Out_column, 1
0x04CE	0x0E1B      	MOVLW       ?lstr2_step_4
0x04D0	0x6F6B      	MOVWF       FARG_Lcd_Out_text, 1
0x04D2	0x0E00      	MOVLW       hi_addr(?lstr2_step_4)
0x04D4	0x6F6C      	MOVWF       FARG_Lcd_Out_text+1, 1
0x04D6	0xDF79      	RCALL       _Lcd_Out
;step_4.c,70 :: 		T0CON=0b11000111;// timer 0 configuration: (1):enable timer-(1):8bit-(0):selcet internal clock-(0):selcte edge-(0):activate prescalar-(111):prescaler value
0x04D8	0x0EC7      	MOVLW       199
0x04DA	0x6ED5      	MOVWF       T0CON 
;step_4.c,71 :: 		TMR0L=0x3D;
0x04DC	0x0E3D      	MOVLW       61
0x04DE	0x6ED6      	MOVWF       TMR0L 
;step_4.c,72 :: 		INTCON=0b10100000; // interruprt configuration: (1):GIE-(0):disable periphal interupt-(1):TMR0IE(0):INT0IE(0):RBIE-(0):TMR0IF(0):INT0IF(0)
0x04E0	0x0EA0      	MOVLW       160
0x04E2	0x6EF2      	MOVWF       INTCON 
;step_4.c,75 :: 		while (1){
L_main0:
;step_4.c,77 :: 		if(counter_1>delay_kitt) {
0x04E4	0x0E80      	MOVLW       128
0x04E6	0x1836      	XORWF       main_delay_kitt_L0+1, 0 
0x04E8	0x6E00      	MOVWF       R0 
0x04EA	0x0E80      	MOVLW       128
0x04EC	0x1824      	XORWF       _counter_1+1, 0 
0x04EE	0x5C00      	SUBWF       R0, 0 
0x04F0	0xE102      	BNZ         L__main39
0x04F2	0x5023      	MOVF        _counter_1, 0 
0x04F4	0x5C35      	SUBWF       main_delay_kitt_L0, 0 
L__main39:
0x04F6	0xE22B      	BC          L_main2
;step_4.c,78 :: 		if (dir==0){
0x04F8	0x5034      	MOVF        main_dir_L0, 0 
0x04FA	0x0A00      	XORLW       0
0x04FC	0xE10B      	BNZ         L_main3
;step_4.c,79 :: 		LATD=LATD+dx+sx; //PORTD=PORTD+dx+sx;  //cosi non funziona e non capisco perchè
0x04FE	0x5032      	MOVF        main_dx_L0, 0 
0x0500	0x248C      	ADDWF       LATD, 0 
0x0502	0x6E00      	MOVWF       R0 
0x0504	0x5033      	MOVF        main_sx_L0, 0 
0x0506	0x2400      	ADDWF       R0, 0 
0x0508	0x6E8C      	MOVWF       LATD 
;step_4.c,80 :: 		dx<<=1;
0x050A	0x3632      	RLCF        main_dx_L0, 1 
0x050C	0x9032      	BCF         main_dx_L0, 0 
;step_4.c,81 :: 		sx>>=1;
0x050E	0x3233      	RRCF        main_sx_L0, 1 
0x0510	0x9E33      	BCF         main_sx_L0, 7 
;step_4.c,82 :: 		}
0x0512	0xD012      	BRA         L_main4
L_main3:
;step_4.c,84 :: 		dx>>=1;
0x0514	0xF002C032  	MOVFF       main_dx_L0, R2
0x0518	0x3202      	RRCF        R2, 1 
0x051A	0x9E02      	BCF         R2, 7 
0x051C	0xF032C002  	MOVFF       R2, main_dx_L0
;step_4.c,85 :: 		sx<<=1;
0x0520	0xF001C033  	MOVFF       main_sx_L0, R1
0x0524	0x3601      	RLCF        R1, 1 
0x0526	0x9001      	BCF         R1, 0 
0x0528	0xF033C001  	MOVFF       R1, main_sx_L0
;step_4.c,86 :: 		LATD=LATD-dx-sx;
0x052C	0x5002      	MOVF        R2, 0 
0x052E	0x5C8C      	SUBWF       LATD, 0 
0x0530	0x6E00      	MOVWF       R0 
0x0532	0x5001      	MOVF        R1, 0 
0x0534	0x5C00      	SUBWF       R0, 0 
0x0536	0x6E8C      	MOVWF       LATD 
;step_4.c,87 :: 		}
L_main4:
;step_4.c,89 :: 		if (LATD==0b11111111){ // siamo al centro e dx=00010000 sx=0000100
0x0538	0x508C      	MOVF        LATD, 0 
0x053A	0x0AFF      	XORLW       255
0x053C	0xE102      	BNZ         L_main5
;step_4.c,90 :: 		dir=1;
0x053E	0x0E01      	MOVLW       1
0x0540	0x6E34      	MOVWF       main_dir_L0 
;step_4.c,91 :: 		}
L_main5:
;step_4.c,92 :: 		if (LATD==0b00000000){
0x0542	0x508C      	MOVF        LATD, 0 
0x0544	0x0A00      	XORLW       0
0x0546	0xB4D8      	BTFSC       STATUS, 2 
;step_4.c,93 :: 		dir=0;
0x0548	0x6A34      	CLRF        main_dir_L0 
;step_4.c,94 :: 		}
L_main6:
;step_4.c,96 :: 		counter_1=0; //riazzera il counter
0x054A	0x6A23      	CLRF        _counter_1 
0x054C	0x6A24      	CLRF        _counter_1+1 
;step_4.c,97 :: 		}
L_main2:
;step_4.c,99 :: 		if (counter_2>1000 && cron_condition==1 ){ // counter 2 ha superato un secondo e il cronometro è accesso
0x054E	0x0E80      	MOVLW       128
0x0550	0x0A03      	XORLW       3
0x0552	0x6E00      	MOVWF       R0 
0x0554	0x0E80      	MOVLW       128
0x0556	0x1826      	XORWF       _counter_2+1, 0 
0x0558	0x5C00      	SUBWF       R0, 0 
0x055A	0xE102      	BNZ         L__main40
0x055C	0x5025      	MOVF        _counter_2, 0 
0x055E	0x08E8      	SUBLW       232
L__main40:
0x0560	0xE249      	BC          L_main9
0x0562	0x503B      	MOVF        main_cron_condition_L0, 0 
0x0564	0x0A01      	XORLW       1
0x0566	0xE146      	BNZ         L_main9
L__main37:
;step_4.c,100 :: 		counter_2=0; // riazzero subito counter 2 perhè le istruzioni successive possono causarmi del offset
0x0568	0x6A25      	CLRF        _counter_2 
0x056A	0x6A26      	CLRF        _counter_2+1 
;step_4.c,101 :: 		s+=1; // non devo preoccuparmi degli overflow di cron_val perchè le specifiche richiedono che arrivi ad un massimo di 255
0x056C	0x2A48      	INCF        main_s_L0, 1 
;step_4.c,103 :: 		if (s==60){ // se raggiungo 60 secondi aumenta di 1 i minuti e riazzera i secondi
0x056E	0x5048      	MOVF        main_s_L0, 0 
0x0570	0x0A3C      	XORLW       60
0x0572	0xE107      	BNZ         L_main10
;step_4.c,104 :: 		s=0;
0x0574	0x6A48      	CLRF        main_s_L0 
;step_4.c,105 :: 		m+=1;
0x0576	0x2A47      	INCF        main_m_L0, 1 
;step_4.c,106 :: 		if (m==60){ // se raggiungo i 60 minuti aumenta di 1 le ore e azzera i minuti
0x0578	0x5047      	MOVF        main_m_L0, 0 
0x057A	0x0A3C      	XORLW       60
0x057C	0xE102      	BNZ         L_main11
;step_4.c,107 :: 		m=0;
0x057E	0x6A47      	CLRF        main_m_L0 
;step_4.c,108 :: 		h+=1;
0x0580	0x2A46      	INCF        main_h_L0, 1 
;step_4.c,109 :: 		}
L_main11:
;step_4.c,110 :: 		}
L_main10:
;step_4.c,111 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0582	0x0E01      	MOVLW       1
0x0584	0x6F7A      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0586	0xDD61      	RCALL       _Lcd_Cmd
;step_4.c,112 :: 		IntToStr(s,s_char);
0x0588	0xF069C048  	MOVFF       main_s_L0, FARG_IntToStr_input
0x058C	0x0E00      	MOVLW       0
0x058E	0x6F6A      	MOVWF       FARG_IntToStr_input+1, 1
0x0590	0x0E58      	MOVLW       main_s_char_L0
0x0592	0x6F6B      	MOVWF       FARG_IntToStr_output, 1
0x0594	0x0E00      	MOVLW       hi_addr(main_s_char_L0)
0x0596	0x6F6C      	MOVWF       FARG_IntToStr_output+1, 1
0x0598	0xDE7B      	RCALL       _IntToStr
;step_4.c,113 :: 		IntToStr(m,m_char);
0x059A	0xF069C047  	MOVFF       main_m_L0, FARG_IntToStr_input
0x059E	0x0E00      	MOVLW       0
0x05A0	0x6F6A      	MOVWF       FARG_IntToStr_input+1, 1
0x05A2	0x0E51      	MOVLW       main_m_char_L0
0x05A4	0x6F6B      	MOVWF       FARG_IntToStr_output, 1
0x05A6	0x0E00      	MOVLW       hi_addr(main_m_char_L0)
0x05A8	0x6F6C      	MOVWF       FARG_IntToStr_output+1, 1
0x05AA	0xDE72      	RCALL       _IntToStr
;step_4.c,114 :: 		IntToStr(h,h_char);
0x05AC	0xF069C046  	MOVFF       main_h_L0, FARG_IntToStr_input
0x05B0	0x0E00      	MOVLW       0
0x05B2	0x6F6A      	MOVWF       FARG_IntToStr_input+1, 1
0x05B4	0x0E4A      	MOVLW       main_h_char_L0
0x05B6	0x6F6B      	MOVWF       FARG_IntToStr_output, 1
0x05B8	0x0E00      	MOVLW       hi_addr(main_h_char_L0)
0x05BA	0x6F6C      	MOVWF       FARG_IntToStr_output+1, 1
0x05BC	0xDE69      	RCALL       _IntToStr
;step_4.c,115 :: 		IntToStr(ms,ms_char);
0x05BE	0xF069C049  	MOVFF       main_ms_L0, FARG_IntToStr_input
0x05C2	0x0E00      	MOVLW       0
0x05C4	0x6F6A      	MOVWF       FARG_IntToStr_input+1, 1
0x05C6	0x0E5F      	MOVLW       main_ms_char_L0
0x05C8	0x6F6B      	MOVWF       FARG_IntToStr_output, 1
0x05CA	0x0E00      	MOVLW       hi_addr(main_ms_char_L0)
0x05CC	0x6F6C      	MOVWF       FARG_IntToStr_output+1, 1
0x05CE	0xDE60      	RCALL       _IntToStr
;step_4.c,117 :: 		strcat(tot_char,s_char);
0x05D0	0x0E66      	MOVLW       main_tot_char_L0
0x05D2	0x6F69      	MOVWF       FARG_strcat_to, 1
0x05D4	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x05D6	0x6F6A      	MOVWF       FARG_strcat_to+1, 1
0x05D8	0x0E58      	MOVLW       main_s_char_L0
0x05DA	0x6F6B      	MOVWF       FARG_strcat_from, 1
0x05DC	0x0E00      	MOVLW       hi_addr(main_s_char_L0)
0x05DE	0x6F6C      	MOVWF       FARG_strcat_from+1, 1
0x05E0	0xDEC4      	RCALL       _strcat
;step_4.c,118 :: 		Lcd_Out(1,1,tot_char);
0x05E2	0x0E01      	MOVLW       1
0x05E4	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
0x05E6	0x0E01      	MOVLW       1
0x05E8	0x6F6A      	MOVWF       FARG_Lcd_Out_column, 1
0x05EA	0x0E66      	MOVLW       main_tot_char_L0
0x05EC	0x6F6B      	MOVWF       FARG_Lcd_Out_text, 1
0x05EE	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x05F0	0x6F6C      	MOVWF       FARG_Lcd_Out_text+1, 1
0x05F2	0xDEEB      	RCALL       _Lcd_Out
;step_4.c,120 :: 		}
L_main9:
;step_4.c,122 :: 		A[0]=PORTA.RA0;
0x05F4	0x0E00      	MOVLW       0
0x05F6	0xB080      	BTFSC       PORTA, 0 
0x05F8	0x0E01      	MOVLW       1
0x05FA	0x6E3C      	MOVWF       main_A_L0 
;step_4.c,123 :: 		A[1]=PORTA.RA1;
0x05FC	0x0E00      	MOVLW       0
0x05FE	0xB280      	BTFSC       PORTA, 1 
0x0600	0x0E01      	MOVLW       1
0x0602	0x6E3D      	MOVWF       main_A_L0+1 
;step_4.c,124 :: 		A[2]=PORTA.RA2;
0x0604	0x0E00      	MOVLW       0
0x0606	0xB480      	BTFSC       PORTA, 2 
0x0608	0x0E01      	MOVLW       1
0x060A	0x6E3E      	MOVWF       main_A_L0+2 
;step_4.c,125 :: 		A[3]=PORTA.RA3;
0x060C	0x0E00      	MOVLW       0
0x060E	0xB680      	BTFSC       PORTA, 3 
0x0610	0x0E01      	MOVLW       1
0x0612	0x6E3F      	MOVWF       main_A_L0+3 
;step_4.c,126 :: 		A[4]=PORTA.RA4;
0x0614	0x0E00      	MOVLW       0
0x0616	0xB880      	BTFSC       PORTA, 4 
0x0618	0x0E01      	MOVLW       1
0x061A	0x6E40      	MOVWF       main_A_L0+4 
;step_4.c,128 :: 		if (A[0]&& A_old[0]!=A[0]){ // se premo RA0 fai partire il cronometro
0x061C	0x523C      	MOVF        main_A_L0, 1 
0x061E	0xE005      	BZ          L_main14
0x0620	0x5040      	MOVF        main_A_old_L0, 0 
0x0622	0x183C      	XORWF       main_A_L0, 0 
0x0624	0xE002      	BZ          L_main14
L__main36:
;step_4.c,129 :: 		cron_condition=1;
0x0626	0x0E01      	MOVLW       1
0x0628	0x6E3B      	MOVWF       main_cron_condition_L0 
;step_4.c,130 :: 		}
L_main14:
;step_4.c,131 :: 		if (A[1]&& A_old[1]!=A[1]){ // se premo RA1 stoppa il cronometro
0x062A	0x523D      	MOVF        main_A_L0+1, 1 
0x062C	0xE004      	BZ          L_main17
0x062E	0x5041      	MOVF        main_A_old_L0+1, 0 
0x0630	0x183D      	XORWF       main_A_L0+1, 0 
0x0632	0xA4D8      	BTFSS       STATUS, 2 
L__main35:
;step_4.c,132 :: 		cron_condition=0;
0x0634	0x6A3B      	CLRF        main_cron_condition_L0 
;step_4.c,133 :: 		}
L_main17:
;step_4.c,134 :: 		if (A[2]&& A_old[2]!=A[2]){ // se premo RA2 resetta il cronometro
0x0636	0x523E      	MOVF        main_A_L0+2, 1 
0x0638	0xE010      	BZ          L_main20
0x063A	0x5042      	MOVF        main_A_old_L0+2, 0 
0x063C	0x183E      	XORWF       main_A_L0+2, 0 
0x063E	0xE00D      	BZ          L_main20
L__main34:
;step_4.c,135 :: 		s=0;
0x0640	0x6A48      	CLRF        main_s_L0 
;step_4.c,136 :: 		m=0;
0x0642	0x6A47      	CLRF        main_m_L0 
;step_4.c,137 :: 		h=0;
0x0644	0x6A46      	CLRF        main_h_L0 
;step_4.c,138 :: 		ms=0;
0x0646	0x6A49      	CLRF        main_ms_L0 
;step_4.c,139 :: 		Lcd_Out(1,1,"0:0:0:0"); // mostrta che l'hai riazzerato
0x0648	0x0E01      	MOVLW       1
0x064A	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
0x064C	0x0E01      	MOVLW       1
0x064E	0x6F6A      	MOVWF       FARG_Lcd_Out_column, 1
0x0650	0x0E29      	MOVLW       ?lstr3_step_4
0x0652	0x6F6B      	MOVWF       FARG_Lcd_Out_text, 1
0x0654	0x0E00      	MOVLW       hi_addr(?lstr3_step_4)
0x0656	0x6F6C      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0658	0xDEB8      	RCALL       _Lcd_Out
;step_4.c,140 :: 		}
L_main20:
;step_4.c,141 :: 		if (A[3] && A_old[3]!=A[3] && delay_kitt<delay_kitt_max){ // se premo RA3 aumenta il kitt delay
0x065A	0x523F      	MOVF        main_A_L0+3, 1 
0x065C	0xE011      	BZ          L_main23
0x065E	0x5043      	MOVF        main_A_old_L0+3, 0 
0x0660	0x183F      	XORWF       main_A_L0+3, 0 
0x0662	0xE00E      	BZ          L_main23
0x0664	0x0E80      	MOVLW       128
0x0666	0x1836      	XORWF       main_delay_kitt_L0+1, 0 
0x0668	0x6E00      	MOVWF       R0 
0x066A	0x0E80      	MOVLW       128
0x066C	0x1838      	XORWF       main_delay_kitt_max_L0+1, 0 
0x066E	0x5C00      	SUBWF       R0, 0 
0x0670	0xE102      	BNZ         L__main41
0x0672	0x5037      	MOVF        main_delay_kitt_max_L0, 0 
0x0674	0x5C35      	SUBWF       main_delay_kitt_L0, 0 
L__main41:
0x0676	0xE204      	BC          L_main23
L__main33:
;step_4.c,142 :: 		delay_kitt+=50;
0x0678	0x0E32      	MOVLW       50
0x067A	0x2635      	ADDWF       main_delay_kitt_L0, 1 
0x067C	0x0E00      	MOVLW       0
0x067E	0x2236      	ADDWFC      main_delay_kitt_L0+1, 1 
;step_4.c,143 :: 		}
L_main23:
;step_4.c,144 :: 		if (A[4] &&  A_old[4]!=A[4] && delay_kitt>delay_kitt_min){ // se premo RA4 diminuisci il kitt delay
0x0680	0x5240      	MOVF        main_A_L0+4, 1 
0x0682	0xE011      	BZ          L_main26
0x0684	0x5044      	MOVF        main_A_old_L0+4, 0 
0x0686	0x1840      	XORWF       main_A_L0+4, 0 
0x0688	0xE00E      	BZ          L_main26
0x068A	0x0E80      	MOVLW       128
0x068C	0x183A      	XORWF       main_delay_kitt_min_L0+1, 0 
0x068E	0x6E00      	MOVWF       R0 
0x0690	0x0E80      	MOVLW       128
0x0692	0x1836      	XORWF       main_delay_kitt_L0+1, 0 
0x0694	0x5C00      	SUBWF       R0, 0 
0x0696	0xE102      	BNZ         L__main42
0x0698	0x5035      	MOVF        main_delay_kitt_L0, 0 
0x069A	0x5C39      	SUBWF       main_delay_kitt_min_L0, 0 
L__main42:
0x069C	0xE204      	BC          L_main26
L__main32:
;step_4.c,145 :: 		delay_kitt-=50;
0x069E	0x0E32      	MOVLW       50
0x06A0	0x5E35      	SUBWF       main_delay_kitt_L0, 1 
0x06A2	0x0E00      	MOVLW       0
0x06A4	0x5A36      	SUBWFB      main_delay_kitt_L0+1, 1 
;step_4.c,146 :: 		}
L_main26:
;step_4.c,147 :: 		A_old[0]=A[0];
0x06A6	0xF040C03C  	MOVFF       main_A_L0, main_A_old_L0
;step_4.c,148 :: 		A_old[1]=A[1];
0x06AA	0xF041C03D  	MOVFF       main_A_L0+1, main_A_old_L0+1
;step_4.c,149 :: 		A_old[2]=A[2];
0x06AE	0xF042C03E  	MOVFF       main_A_L0+2, main_A_old_L0+2
;step_4.c,150 :: 		A_old[3]=A[3];
0x06B2	0xF043C03F  	MOVFF       main_A_L0+3, main_A_old_L0+3
;step_4.c,151 :: 		A_old[4]=A[4];
0x06B6	0xF044C040  	MOVFF       main_A_L0+4, main_A_old_L0+4
;step_4.c,153 :: 		C=PORTC.RC0;
0x06BA	0x0E00      	MOVLW       0
0x06BC	0xB082      	BTFSC       PORTC, 0 
0x06BE	0x0E01      	MOVLW       1
0x06C0	0x6E44      	MOVWF       main_C_L0 
;step_4.c,154 :: 		if (C && C_old!=C){ // se premo RC0 aggiorna il display
0x06C2	0x5244      	MOVF        main_C_L0, 1 
0x06C4	0xE06F      	BZ          L_main29
0x06C6	0x5045      	MOVF        main_C_old_L0, 0 
0x06C8	0x1844      	XORWF       main_C_L0, 0 
0x06CA	0xE06C      	BZ          L_main29
L__main31:
;step_4.c,156 :: 		IntToStr(s,s_char);
0x06CC	0xF069C048  	MOVFF       main_s_L0, FARG_IntToStr_input
0x06D0	0x0E00      	MOVLW       0
0x06D2	0x6F6A      	MOVWF       FARG_IntToStr_input+1, 1
0x06D4	0x0E58      	MOVLW       main_s_char_L0
0x06D6	0x6F6B      	MOVWF       FARG_IntToStr_output, 1
0x06D8	0x0E00      	MOVLW       hi_addr(main_s_char_L0)
0x06DA	0x6F6C      	MOVWF       FARG_IntToStr_output+1, 1
0x06DC	0xDDD9      	RCALL       _IntToStr
;step_4.c,157 :: 		IntToStr(m,m_char);
0x06DE	0xF069C047  	MOVFF       main_m_L0, FARG_IntToStr_input
0x06E2	0x0E00      	MOVLW       0
0x06E4	0x6F6A      	MOVWF       FARG_IntToStr_input+1, 1
0x06E6	0x0E51      	MOVLW       main_m_char_L0
0x06E8	0x6F6B      	MOVWF       FARG_IntToStr_output, 1
0x06EA	0x0E00      	MOVLW       hi_addr(main_m_char_L0)
0x06EC	0x6F6C      	MOVWF       FARG_IntToStr_output+1, 1
0x06EE	0xDDD0      	RCALL       _IntToStr
;step_4.c,158 :: 		IntToStr(h,h_char);
0x06F0	0xF069C046  	MOVFF       main_h_L0, FARG_IntToStr_input
0x06F4	0x0E00      	MOVLW       0
0x06F6	0x6F6A      	MOVWF       FARG_IntToStr_input+1, 1
0x06F8	0x0E4A      	MOVLW       main_h_char_L0
0x06FA	0x6F6B      	MOVWF       FARG_IntToStr_output, 1
0x06FC	0x0E00      	MOVLW       hi_addr(main_h_char_L0)
0x06FE	0x6F6C      	MOVWF       FARG_IntToStr_output+1, 1
0x0700	0xDDC7      	RCALL       _IntToStr
;step_4.c,159 :: 		IntToStr(ms,ms_char);
0x0702	0xF069C049  	MOVFF       main_ms_L0, FARG_IntToStr_input
0x0706	0x0E00      	MOVLW       0
0x0708	0x6F6A      	MOVWF       FARG_IntToStr_input+1, 1
0x070A	0x0E5F      	MOVLW       main_ms_char_L0
0x070C	0x6F6B      	MOVWF       FARG_IntToStr_output, 1
0x070E	0x0E00      	MOVLW       hi_addr(main_ms_char_L0)
0x0710	0x6F6C      	MOVWF       FARG_IntToStr_output+1, 1
0x0712	0xDDBE      	RCALL       _IntToStr
;step_4.c,161 :: 		strcat(tot_char,ms_char);
0x0714	0x0E66      	MOVLW       main_tot_char_L0
0x0716	0x6F69      	MOVWF       FARG_strcat_to, 1
0x0718	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x071A	0x6F6A      	MOVWF       FARG_strcat_to+1, 1
0x071C	0x0E5F      	MOVLW       main_ms_char_L0
0x071E	0x6F6B      	MOVWF       FARG_strcat_from, 1
0x0720	0x0E00      	MOVLW       hi_addr(main_ms_char_L0)
0x0722	0x6F6C      	MOVWF       FARG_strcat_from+1, 1
0x0724	0xDE22      	RCALL       _strcat
;step_4.c,162 :: 		strcat(tot_char,":");
0x0726	0x0E66      	MOVLW       main_tot_char_L0
0x0728	0x6F69      	MOVWF       FARG_strcat_to, 1
0x072A	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x072C	0x6F6A      	MOVWF       FARG_strcat_to+1, 1
0x072E	0x0E27      	MOVLW       ?lstr4_step_4
0x0730	0x6F6B      	MOVWF       FARG_strcat_from, 1
0x0732	0x0E00      	MOVLW       hi_addr(?lstr4_step_4)
0x0734	0x6F6C      	MOVWF       FARG_strcat_from+1, 1
0x0736	0xDE19      	RCALL       _strcat
;step_4.c,163 :: 		strcat(tot_char,s_char);
0x0738	0x0E66      	MOVLW       main_tot_char_L0
0x073A	0x6F69      	MOVWF       FARG_strcat_to, 1
0x073C	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x073E	0x6F6A      	MOVWF       FARG_strcat_to+1, 1
0x0740	0x0E58      	MOVLW       main_s_char_L0
0x0742	0x6F6B      	MOVWF       FARG_strcat_from, 1
0x0744	0x0E00      	MOVLW       hi_addr(main_s_char_L0)
0x0746	0x6F6C      	MOVWF       FARG_strcat_from+1, 1
0x0748	0xDE10      	RCALL       _strcat
;step_4.c,164 :: 		strcat(tot_char,":");
0x074A	0x0E66      	MOVLW       main_tot_char_L0
0x074C	0x6F69      	MOVWF       FARG_strcat_to, 1
0x074E	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x0750	0x6F6A      	MOVWF       FARG_strcat_to+1, 1
0x0752	0x0E17      	MOVLW       ?lstr5_step_4
0x0754	0x6F6B      	MOVWF       FARG_strcat_from, 1
0x0756	0x0E00      	MOVLW       hi_addr(?lstr5_step_4)
0x0758	0x6F6C      	MOVWF       FARG_strcat_from+1, 1
0x075A	0xDE07      	RCALL       _strcat
;step_4.c,165 :: 		strcat(tot_char,m_char);
0x075C	0x0E66      	MOVLW       main_tot_char_L0
0x075E	0x6F69      	MOVWF       FARG_strcat_to, 1
0x0760	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x0762	0x6F6A      	MOVWF       FARG_strcat_to+1, 1
0x0764	0x0E51      	MOVLW       main_m_char_L0
0x0766	0x6F6B      	MOVWF       FARG_strcat_from, 1
0x0768	0x0E00      	MOVLW       hi_addr(main_m_char_L0)
0x076A	0x6F6C      	MOVWF       FARG_strcat_from+1, 1
0x076C	0xDDFE      	RCALL       _strcat
;step_4.c,166 :: 		strcat(tot_char,":");
0x076E	0x0E66      	MOVLW       main_tot_char_L0
0x0770	0x6F69      	MOVWF       FARG_strcat_to, 1
0x0772	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x0774	0x6F6A      	MOVWF       FARG_strcat_to+1, 1
0x0776	0x0E19      	MOVLW       ?lstr6_step_4
0x0778	0x6F6B      	MOVWF       FARG_strcat_from, 1
0x077A	0x0E00      	MOVLW       hi_addr(?lstr6_step_4)
0x077C	0x6F6C      	MOVWF       FARG_strcat_from+1, 1
0x077E	0xDDF5      	RCALL       _strcat
;step_4.c,167 :: 		strcat(tot_char,h_char);
0x0780	0x0E66      	MOVLW       main_tot_char_L0
0x0782	0x6F69      	MOVWF       FARG_strcat_to, 1
0x0784	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x0786	0x6F6A      	MOVWF       FARG_strcat_to+1, 1
0x0788	0x0E4A      	MOVLW       main_h_char_L0
0x078A	0x6F6B      	MOVWF       FARG_strcat_from, 1
0x078C	0x0E00      	MOVLW       hi_addr(main_h_char_L0)
0x078E	0x6F6C      	MOVWF       FARG_strcat_from+1, 1
0x0790	0xDDEC      	RCALL       _strcat
;step_4.c,168 :: 		Lcd_Out(1,1,tot_char);
0x0792	0x0E01      	MOVLW       1
0x0794	0x6F69      	MOVWF       FARG_Lcd_Out_row, 1
0x0796	0x0E01      	MOVLW       1
0x0798	0x6F6A      	MOVWF       FARG_Lcd_Out_column, 1
0x079A	0x0E66      	MOVLW       main_tot_char_L0
0x079C	0x6F6B      	MOVWF       FARG_Lcd_Out_text, 1
0x079E	0x0E00      	MOVLW       hi_addr(main_tot_char_L0)
0x07A0	0x6F6C      	MOVWF       FARG_Lcd_Out_text+1, 1
0x07A2	0xDE13      	RCALL       _Lcd_Out
;step_4.c,169 :: 		}
L_main29:
;step_4.c,170 :: 		}
0x07A4	0xD69F      	BRA         L_main0
;step_4.c,172 :: 		}
L_end_main:
0x07A6	0xD7FF      	BRA         $+0
; end of _main
0x07DC	0xF015EE10  	LFSR        1, 21
0x07E0	0x0E1C      	MOVLW       28
0x07E2	0x6E00      	MOVWF       R0 
0x07E4	0x0E01      	MOVLW       1
0x07E6	0x6E01      	MOVWF       R1 
0x07E8	0x0EA8      	MOVLW       168
0x07EA	0x6EF6      	MOVWF       TBLPTR 
0x07EC	0x0E07      	MOVLW       7
0x07EE	0x6EF7      	MOVWF       TBLPTRH 
0x07F0	0x0E00      	MOVLW       0
0x07F2	0x6EF8      	MOVWF       TBLPTRU 
0x07F4	0xF001EC19  	CALL        562, 0
0x07F8	0x0012      	RETURN      0
;step_4.c,0 :: ?ICS?lstr1_step_4
0x07A8	0x002D ;?ICS?lstr1_step_4+0
; end of ?ICS?lstr1_step_4
;step_4.c,0 :: ?ICS?lstr5_step_4
0x07AA	0x003A ;?ICS?lstr5_step_4+0
; end of ?ICS?lstr5_step_4
;step_4.c,0 :: ?ICS?lstr6_step_4
0x07AC	0x003A ;?ICS?lstr6_step_4+0
; end of ?ICS?lstr6_step_4
;step_4.c,0 :: ?ICS?lstr2_step_4
0x07AE	0x3A30 ;?ICS?lstr2_step_4+0
0x07B0	0x3A30 ;?ICS?lstr2_step_4+2
0x07B2	0x3A30 ;?ICS?lstr2_step_4+4
0x07B4	0x0030 ;?ICS?lstr2_step_4+6
; end of ?ICS?lstr2_step_4
;step_4.c,0 :: ?ICS_counter_1
0x07B6	0x0000 ;?ICS_counter_1+0
; end of ?ICS_counter_1
;step_4.c,0 :: ?ICS_counter_2
0x07B8	0x0000 ;?ICS_counter_2+0
; end of ?ICS_counter_2
;step_4.c,0 :: ?ICS?lstr4_step_4
0x07BA	0x003A ;?ICS?lstr4_step_4+0
; end of ?ICS?lstr4_step_4
;step_4.c,0 :: ?ICS?lstr3_step_4
0x07BC	0x3A30 ;?ICS?lstr3_step_4+0
0x07BE	0x3A30 ;?ICS?lstr3_step_4+2
0x07C0	0x3A30 ;?ICS?lstr3_step_4+4
0x07C2	0x0030 ;?ICS?lstr3_step_4+6
; end of ?ICS?lstr3_step_4
;step_4.c,0 :: ?ICSmain_dx_L0
0x07C4	0x01 ;?ICSmain_dx_L0+0
; end of ?ICSmain_dx_L0
;step_4.c,0 :: ?ICSmain_sx_L0
0x07C5	0x80 ;?ICSmain_sx_L0+0
; end of ?ICSmain_sx_L0
;step_4.c,0 :: ?ICSmain_dir_L0
0x07C6	0x00 ;?ICSmain_dir_L0+0
; end of ?ICSmain_dir_L0
;step_4.c,0 :: ?ICSmain_delay_kitt_L0
0x07C7	0x01F4 ;?ICSmain_delay_kitt_L0+0
; end of ?ICSmain_delay_kitt_L0
;step_4.c,0 :: ?ICSmain_delay_kitt_max_L0
0x07C9	0x05DC ;?ICSmain_delay_kitt_max_L0+0
; end of ?ICSmain_delay_kitt_max_L0
;step_4.c,0 :: ?ICSmain_delay_kitt_min_L0
0x07CB	0x0064 ;?ICSmain_delay_kitt_min_L0+0
; end of ?ICSmain_delay_kitt_min_L0
;step_4.c,0 :: ?ICSmain_cron_condition_L0
0x07CD	0x00 ;?ICSmain_cron_condition_L0+0
; end of ?ICSmain_cron_condition_L0
;step_4.c,0 :: ?ICSmain_A_L0
0x07CE	0x0000 ;?ICSmain_A_L0+0
0x07D0	0x0000 ;?ICSmain_A_L0+2
; end of ?ICSmain_A_L0
;step_4.c,0 :: ?ICSmain_A_old_L0
0x07D2	0x0000 ;?ICSmain_A_old_L0+0
0x07D4	0x0000 ;?ICSmain_A_old_L0+2
; end of ?ICSmain_A_old_L0
;step_4.c,0 :: ?ICSmain_C_L0
0x07D6	0x00 ;?ICSmain_C_L0+0
; end of ?ICSmain_C_L0
;step_4.c,0 :: ?ICSmain_C_old_L0
0x07D7	0x00 ;?ICSmain_C_old_L0+0
; end of ?ICSmain_C_old_L0
;step_4.c,0 :: ?ICSmain_h_L0
0x07D8	0x00 ;?ICSmain_h_L0+0
; end of ?ICSmain_h_L0
;step_4.c,0 :: ?ICSmain_m_L0
0x07D9	0x00 ;?ICSmain_m_L0+0
; end of ?ICSmain_m_L0
;step_4.c,0 :: ?ICSmain_s_L0
0x07DA	0x00 ;?ICSmain_s_L0+0
; end of ?ICSmain_s_L0
;step_4.c,0 :: ?ICSmain_ms_L0
0x07DB	0x00 ;?ICSmain_ms_L0+0
; end of ?ICSmain_ms_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [28]    _interrupt
0x0024      [22]    _Delay_5500us
0x003A      [10]    _Delay_50us
0x0044       [6]    _Delay_1us
0x004A     [126]    _Lcd_Cmd
0x00C8      [54]    _Div_16X16_U
0x00FE      [12]    _Lcd_Chr_CP
0x010A     [146]    _WordToStr
0x019C     [150]    _Lcd_Init
0x0232      [16]    ___CC2DW
0x0242      [78]    _strcpy
0x0290     [218]    _IntToStr
0x036A      [96]    _strcat
0x03CA     [126]    _Lcd_Out
0x0448     [864]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    __Lib_Conversions_Adjust_Hex_tmp_L0
0x0001       [1]    R1
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0004       [1]    R4
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0005       [1]    R5
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    Ltrim_p_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    ?lstr1_step_4
0x0017       [2]    ?lstr5_step_4
0x0019       [2]    ?lstr6_step_4
0x001B       [8]    ?lstr2_step_4
0x0023       [2]    _counter_1
0x0025       [2]    _counter_2
0x0027       [2]    ?lstr4_step_4
0x0029       [8]    ?lstr3_step_4
0x0031       [0]    __Lib_Lcd_cmd_status
0x0032       [1]    main_dx_L0
0x0033       [1]    main_sx_L0
0x0034       [1]    main_dir_L0
0x0035       [2]    main_delay_kitt_L0
0x0037       [2]    main_delay_kitt_max_L0
0x0039       [2]    main_delay_kitt_min_L0
0x003B       [1]    main_cron_condition_L0
0x003C       [4]    main_A_L0
0x0040       [4]    main_A_old_L0
0x0044       [1]    main_C_L0
0x0045       [1]    main_C_old_L0
0x0046       [1]    main_h_L0
0x0047       [1]    main_m_L0
0x0048       [1]    main_s_L0
0x0049       [1]    main_ms_L0
0x004A       [7]    main_h_char_L0
0x0051       [7]    main_m_char_L0
0x0058       [7]    main_s_char_L0
0x005F       [7]    main_ms_char_L0
0x0066       [3]    main_tot_char_L0
0x0069       [2]    FARG_IntToStr_input
0x0069       [2]    FARG_strcat_to
0x0069       [1]    FARG_Lcd_Out_row
0x0069       [2]    FARG_strcpy_to
0x006A       [1]    FARG_Lcd_Out_column
0x006B       [2]    FARG_IntToStr_output
0x006B       [2]    FARG_strcat_from
0x006B       [2]    FARG_Lcd_Out_text
0x006B       [2]    FARG_strcpy_from
0x006D       [1]    Lcd_Out_i_L0
0x006D       [2]    IntToStr_i_L0
0x006F       [2]    IntToStr_negative_L0
0x0071       [2]    IntToStr_inword_L0
0x0073       [1]    FARG_Lcd_Chr_CP_out_char
0x0073       [2]    FARG_WordToStr_input
0x0075       [2]    FARG_WordToStr_output
0x0077       [1]    WordToStr_len_L0
0x0078       [2]    FLOC__WordToStr
0x007A       [1]    FARG_Lcd_Cmd_out_char
0x0F38       [1]    ANSELA
0x0F3A       [1]    ANSELC
0x0F80       [1]    PORTA
0x0F82       [1]    PORTC
0x0F8A       [0]    LCD_RS
0x0F8A       [0]    LCD_D5
0x0F8A       [0]    LCD_D4
0x0F8A       [0]    LCD_EN
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LCD_D6
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LCD_D7
0x0F8A       [0]    LATB4_bit
0x0F8C       [1]    LATD
0x0F92       [1]    TRISA
0x0F93       [0]    LCD_D5_Direction
0x0F93       [0]    LCD_D4_Direction
0x0F93       [0]    LCD_D7_Direction
0x0F93       [0]    LCD_D6_Direction
0x0F93       [0]    LCD_EN_Direction
0x0F93       [0]    TRISB4_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    LCD_RS_Direction
0x0F94       [1]    TRISC
0x0F95       [1]    TRISD
0x0FD5       [1]    T0CON
0x0FD6       [1]    TMR0L
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF2       [1]    INTCON
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [3]    TBLPTR
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x07A8       [2]    ?ICS?lstr1_step_4
0x07AA       [2]    ?ICS?lstr5_step_4
0x07AC       [2]    ?ICS?lstr6_step_4
0x07AE       [8]    ?ICS?lstr2_step_4
0x07B6       [2]    ?ICS_counter_1
0x07B8       [2]    ?ICS_counter_2
0x07BA       [2]    ?ICS?lstr4_step_4
0x07BC       [8]    ?ICS?lstr3_step_4
0x07C4       [1]    ?ICSmain_dx_L0
0x07C5       [1]    ?ICSmain_sx_L0
0x07C6       [1]    ?ICSmain_dir_L0
0x07C7       [2]    ?ICSmain_delay_kitt_L0
0x07C9       [2]    ?ICSmain_delay_kitt_max_L0
0x07CB       [2]    ?ICSmain_delay_kitt_min_L0
0x07CD       [1]    ?ICSmain_cron_condition_L0
0x07CE       [4]    ?ICSmain_A_L0
0x07D2       [4]    ?ICSmain_A_old_L0
0x07D6       [1]    ?ICSmain_C_L0
0x07D7       [1]    ?ICSmain_C_old_L0
0x07D8       [1]    ?ICSmain_h_L0
0x07D9       [1]    ?ICSmain_m_L0
0x07DA       [1]    ?ICSmain_s_L0
0x07DB       [1]    ?ICSmain_ms_L0
